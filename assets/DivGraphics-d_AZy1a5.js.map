{"version":3,"file":"DivGraphics-d_AZy1a5.js","sources":["../../src/components/Cesium/CesiumDivGraphics/index.ts","../../src/views/Graphics/DivGraphics.vue"],"sourcesContent":["import * as Cesium from 'cesium'\r\nimport './css3.css'\r\n\r\nclass CesiumDivGraphics {\r\n  declare _viewer: any\r\n  declare _scratch: any\r\n  declare _container: any\r\n  declare _elements: [any]\r\n  declare _scene: any\r\n  declare _camera: any\r\n  declare _isBackHide: boolean\r\n  constructor({ viewer, elements, isBackHide = true }) {\r\n    this._scratch = new Cesium.Cartesian2()\r\n    this._viewer = viewer\r\n    this._scene = viewer.scene\r\n    this._camera = viewer.camera\r\n\r\n    this._container = null\r\n    this._elements = elements\r\n    this._isBackHide = isBackHide\r\n\r\n    this.init()\r\n  }\r\n\r\n  init() {\r\n    const container = document.createElement('div')\r\n    container.className = `lanwarf-css3-container`\r\n    document.body.appendChild(container)\r\n    this._container = container\r\n\r\n    this._elements.forEach(function (e) {\r\n      container.insertAdjacentHTML('beforeend', e.element)\r\n    })\r\n    const $this = this\r\n    this._scene.preRender.addEventListener(function () {\r\n      //\r\n      for (let i = 0; i < container.children.length; i++) {\r\n        const p = Cesium.Cartesian3.fromDegrees(\r\n          $this._elements[i].position[0],\r\n          $this._elements[i].position[1],\r\n          $this._elements[i].position[2] || 0\r\n        )\r\n        const canvasPosition = $this._scene.cartesianToCanvasCoordinates(p, $this._scratch)\r\n        if (Cesium.defined(canvasPosition)) {\r\n          container.children[i].style.left =\r\n            parseFloat(canvasPosition.x) + parseFloat($this._elements[i].offset[0]) + 'px'\r\n          container.children[i].style.top =\r\n            parseFloat(canvasPosition.y) + parseFloat($this._elements[i].offset[1]) + 'px'\r\n          if ($this._isBackHide) {\r\n            let j = $this._camera.position,\r\n              n = $this._scene.globe.ellipsoid.cartesianToCartographic(j).height\r\n            if (\r\n              !((n += 1 * $this._scene.globe.ellipsoid.maximumRadius),\r\n              Cesium.Cartesian3.distance(j, p) > n)\r\n            ) {\r\n              container.children[i].style.display = 'block'\r\n            } else {\r\n              container.children[i].style.display = 'none'\r\n            }\r\n          }\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  remove(id) {\r\n    this._elements = this._elements.filter(function (e) {\r\n      e.id !== id\r\n    })\r\n    this._container.removeChild(document.getElementById(id))\r\n  }\r\n\r\n  append(object) {\r\n    this._elements.push(object)\r\n    this._container.insertAdjacentHTML('beforeend', object.element)\r\n  }\r\n\r\n  removeEntityLayer(id) {\r\n    this._viewer.entities.removeById(id + '_1')\r\n    this._viewer.entities.removeById(id + '_2')\r\n    this._viewer.entities.removeById(id + '_3')\r\n    this.remove(id)\r\n  }\r\n\r\n  addEntityLayer(object) {\r\n    let lon = object.position[0],\r\n      lat = object.position[1],\r\n      sStartFlog = false,\r\n      $this = this,\r\n      s1 = 0.001,\r\n      s2 = s1,\r\n      s3 = s1,\r\n      s4 = s1\r\n    setTimeout(function (sStartFlog) {\r\n      sStartFlog = true\r\n    }, 300)\r\n    let rotation = Cesium.Math.toRadians(30)\r\n    let rotation2 = Cesium.Math.toRadians(30)\r\n\r\n    //构建entity\r\n    let height = object.boxHeight || 300,\r\n      heightMax = object.boxHeightMax || 400,\r\n      heightDif = object.boxHeightDif || 10\r\n    let goflog = true\r\n    //添加正方体\r\n    if (object.boxShow) {\r\n      this._viewer.entities.add({\r\n        id: object.id + '_1',\r\n        name: '立方体盒子',\r\n        position: new Cesium.CallbackProperty(function () {\r\n          height = height + heightDif\r\n          if (height >= heightMax) {\r\n            height = heightMax\r\n          }\r\n          return Cesium.Cartesian3.fromDegrees(lon, lat, height / 2)\r\n        }, false),\r\n        box: {\r\n          dimensions: new Cesium.CallbackProperty(function () {\r\n            height = height + heightDif\r\n            if (height >= heightMax) {\r\n              height = heightMax\r\n              if (goflog) {\r\n                //需要增加判断 不然它会一直执行; 导致对div的dom操作 会一直重复\r\n                goflog = false\r\n                $this.append(object, true)\r\n              }\r\n            }\r\n            return new Cesium.Cartesian3(object.boxSide || 100, object.boxSide || 100, height)\r\n          }, false),\r\n          material: object.boxMaterial || Cesium.Color.DEEPSKYBLUE.withAlpha(0.5)\r\n        }\r\n      })\r\n    } else {\r\n      // 只要弹出框\r\n      setTimeout(function () {\r\n        $this.append(object, true)\r\n      }, 100)\r\n    }\r\n    if (object.circleShow) {\r\n      object.circleSize = object.circleSize || 120\r\n      //添加底座 一 外环\r\n      this._viewer.entities.add({\r\n        id: object.id + '_2',\r\n        name: '椭圆',\r\n        position: Cesium.Cartesian3.fromDegrees(lon, lat),\r\n        ellipse: {\r\n          // semiMinorAxis : object.circleSize, //直接这个大小 会有一个闪白的材质 因为cesium材质默认是白色 所以我们先将大小设置为0\r\n          // semiMajorAxis : object.circleSize,\r\n          semiMinorAxis: new Cesium.CallbackProperty(function () {\r\n            if (sStartFlog) {\r\n              s1 = s1 + object.circleSize / 20\r\n              if (s1 >= object.circleSize) {\r\n                s1 = object.circleSize\r\n              }\r\n            }\r\n            return s1\r\n          }, false),\r\n          semiMajorAxis: new Cesium.CallbackProperty(function () {\r\n            if (sStartFlog) {\r\n              s2 = s2 + object.circleSize / 20\r\n              if (s2 >= object.circleSize) {\r\n                s2 = object.circleSize\r\n              }\r\n            }\r\n            return s2\r\n          }, false),\r\n          material: 'data/images/Textures/circle2.png',\r\n          rotation: new Cesium.CallbackProperty(function () {\r\n            rotation += 0.05\r\n            return rotation\r\n          }, false),\r\n          stRotation: new Cesium.CallbackProperty(function () {\r\n            rotation += 0.05\r\n            return rotation\r\n          }, false),\r\n          zIndex: 2\r\n        }\r\n      })\r\n      //添加底座二 内环\r\n      this._viewer.entities.add({\r\n        id: object.id + '_3',\r\n        name: '椭圆',\r\n        position: Cesium.Cartesian3.fromDegrees(lon, lat),\r\n        ellipse: {\r\n          semiMinorAxis: new Cesium.CallbackProperty(function () {\r\n            if (sStartFlog) {\r\n              s3 = s3 + object.circleSize / 20\r\n              if (s3 >= object.circleSize / 2) {\r\n                s3 = object.circleSize / 2\r\n              }\r\n            }\r\n            return s3\r\n          }, false),\r\n          semiMajorAxis: new Cesium.CallbackProperty(function () {\r\n            if (sStartFlog) {\r\n              s4 = s4 + object.circleSize / 20\r\n              if (s4 >= object.circleSize / 2) {\r\n                s4 = object.circleSize / 2\r\n              }\r\n            }\r\n            return s4\r\n          }, false),\r\n          material: 'data/images/Textures/circle1.png',\r\n          rotation: new Cesium.CallbackProperty(function () {\r\n            rotation2 -= 0.03\r\n            return rotation2\r\n          }, false),\r\n          stRotation: new Cesium.CallbackProperty(function () {\r\n            rotation2 -= 0.03\r\n            return rotation2\r\n          }, false),\r\n          zIndex: 3\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\nexport default CesiumDivGraphics\r\n","<script setup lang=\"ts\">\r\nimport { onBeforeUnmount } from 'vue'\r\nimport { ContentWrap } from '@/components/ContentWrap'\r\nimport CesiumComponent from '@/components/Cesium/Cesium.component.vue'\r\n\r\nimport { useCesium } from '@/hooks/web/useCesium'\r\nimport * as Cesium from 'cesium'\r\n\r\nimport { ElButton } from 'element-plus'\r\n\r\nconst { mapRegister, mapMethods } = useCesium()\r\n\r\nconst { getMap } = mapMethods\r\n\r\ndefineOptions({\r\n  name: 'DivGraphics'\r\n})\r\n\r\nimport CesiumDivGraphics from '@/components/Cesium/CesiumDivGraphics'\r\n\r\nlet css3Renderer\r\nconst cesiumLoadCB = (viewer) => {\r\n  // 相机定位\r\n  viewer.camera.setView({\r\n    destination: Cesium.Cartesian3.fromDegrees(120, 30, 17850000 * 0.01),\r\n    orientation: {\r\n      heading: Cesium.Math.toRadians(350.4202942851978),\r\n      pitch: Cesium.Math.toRadians(-89.74026687972041),\r\n      roll: Cesium.Math.toRadians(0.0)\r\n    }\r\n  })\r\n\r\n  css3Renderer = new CesiumDivGraphics({\r\n    viewer: viewer,\r\n    elements: [\r\n      {\r\n        id: 'box4',\r\n        position: [120, 30, 50.0],\r\n        element: `<div style=\"position: fixed;top: 0;left: 0;color: red\" id=\"box4\">我是自定义div</div>`,\r\n        offset: [200, 160]\r\n      }\r\n    ],\r\n    isBackHide: false\r\n  })\r\n\r\n  // let css3Renderer = new Css3Renderer(viewer, [], true)\r\n  // css3Renderer.addEntityLayer({\r\n  //   id: '',\r\n  //   position: [120, 30, 30.0], //高度为 boxHeightMax\r\n  //   element: `<div style=\"position: fixed;top: 0;\" id='div1'>\r\n  //              <div class='line'></div>\r\n  //              <h1>22222</h1>\r\n  //              <div class='main' style=\"font-size:20px\">\r\n  //                       <div class=\"\" style=\"color:#ff9800\">信息点</div>\r\n  //                      <div class=\"\"> xx大厦 </div>\r\n  //               </div>\r\n  //          </div>`,\r\n  //   offset: [200, 160],\r\n  //   boxShow: false,\r\n  //   circleShow: false\r\n  // })\r\n}\r\n\r\nonBeforeUnmount(() => {\r\n  // 清除自定义div\r\n  css3Renderer?.remove('box4')\r\n})\r\n</script>\r\n\r\n<template>\r\n  <ContentWrap title=\"DivGraphics\">\r\n    <div class=\"w-[100%] h-[100%]\">\r\n      <cesium-component\r\n        @register=\"mapRegister\"\r\n        :config=\"{\r\n          // homeButton: true\r\n        }\"\r\n        tiandituTk=\"80cd3c8ae46ae32fa0ac19f6d739d310\"\r\n        :cesiumLoadCB=\"cesiumLoadCB\"\r\n      />\r\n    </div>\r\n  </ContentWrap>\r\n</template>\r\n"],"names":["CesiumDivGraphics","viewer","elements","isBackHide","container","e","$this","p","canvasPosition","j","n","id","object","lon","lat","s1","s2","s3","s4","sStartFlog2","rotation","rotation2","height","heightMax","heightDif","goflog","mapRegister","mapMethods","useCesium","css3Renderer","cesiumLoadCB","onBeforeUnmount"],"mappings":"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"}