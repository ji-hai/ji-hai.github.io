{"version":3,"file":"Fireworks-C5NFavZk.js","sources":["../../src/components/Cesium/CesiumEffects/Fireworks.ts","../../src/views/Particle/Fireworks.vue"],"sourcesContent":["import * as Cesium from 'cesium'\r\n/**\r\n * @description: 烟花效果\r\n * @param {*} viewer\r\n * @return {*}\r\n */\r\nconst Fireworks = (viewer: any) => {\r\n  const scene = viewer.scene\r\n  Cesium.Math.setRandomNumberSeed(315)\r\n  const modelMatrix = Cesium.Transforms.eastNorthUpToFixedFrame(\r\n    Cesium.Cartesian3.fromDegrees(120.84, 30.15)\r\n  )\r\n  const emitterInitialLocation = new Cesium.Cartesian3(0.0, 0.0, 100.0)\r\n\r\n  let particleCanvas: HTMLCanvasElement\r\n\r\n  function getImage() {\r\n    if (!Cesium.defined(particleCanvas)) {\r\n      particleCanvas = document.createElement('canvas')\r\n      particleCanvas.width = 20\r\n      particleCanvas.height = 20\r\n      const context2D = particleCanvas.getContext('2d')\r\n      // @ts-ignore\r\n      context2D.beginPath()\r\n      // @ts-ignore\r\n      context2D.arc(8, 8, 8, 0, Cesium.Math.TWO_PI, true)\r\n      // @ts-ignore\r\n      context2D.closePath()\r\n      // @ts-ignore\r\n      context2D.fillStyle = 'rgb(255, 255, 255)'\r\n      // @ts-ignore\r\n      context2D.fill()\r\n    }\r\n    return particleCanvas\r\n  }\r\n\r\n  const minimumExplosionSize = 30.0\r\n  const maximumExplosionSize = 100.0\r\n  const particlePixelSize = new Cesium.Cartesian2(7.0, 7.0)\r\n  const burstSize = 400.0\r\n  const lifetime = 10.0\r\n  const numberOfFireworks = 20.0\r\n\r\n  const emitterModelMatrixScratch = new Cesium.Matrix4()\r\n\r\n  function createFirework(\r\n    offset: Cesium.Cartesian3,\r\n    color: Cesium.Color,\r\n    bursts: Cesium.ParticleBurst[]\r\n  ) {\r\n    const position = Cesium.Cartesian3.add(emitterInitialLocation, offset, new Cesium.Cartesian3())\r\n    const emitterModelMatrix = Cesium.Matrix4.fromTranslation(position, emitterModelMatrixScratch)\r\n    const particleToWorld = Cesium.Matrix4.multiply(\r\n      modelMatrix,\r\n      emitterModelMatrix,\r\n      new Cesium.Matrix4()\r\n    )\r\n    const worldToParticle = Cesium.Matrix4.inverseTransformation(particleToWorld, particleToWorld)\r\n\r\n    const size = Cesium.Math.randomBetween(minimumExplosionSize, maximumExplosionSize)\r\n    const particlePositionScratch = new Cesium.Cartesian3()\r\n    const force = function (particle: {\r\n      position: Cesium.Cartesian3\r\n      velocity: Cesium.Cartesian3 | undefined\r\n    }) {\r\n      const position = Cesium.Matrix4.multiplyByPoint(\r\n        worldToParticle,\r\n        particle.position,\r\n        particlePositionScratch\r\n      )\r\n      if (Cesium.Cartesian3.magnitudeSquared(position) >= size * size) {\r\n        Cesium.Cartesian3.clone(Cesium.Cartesian3.ZERO, particle.velocity)\r\n      }\r\n    }\r\n\r\n    const normalSize = (size - minimumExplosionSize) / (maximumExplosionSize - minimumExplosionSize)\r\n    const minLife = 0.3\r\n    const maxLife = 1.0\r\n    const life = normalSize * (maxLife - minLife) + minLife\r\n\r\n    scene.primitives.add(\r\n      new Cesium.ParticleSystem({\r\n        image: getImage(),\r\n        startColor: color,\r\n        endColor: color.withAlpha(0.0),\r\n        particleLife: life,\r\n        speed: 100.0,\r\n        imageSize: particlePixelSize,\r\n        emissionRate: 0,\r\n        emitter: new Cesium.SphereEmitter(0.1),\r\n        bursts: bursts,\r\n        lifetime: lifetime,\r\n        updateCallback: force,\r\n        modelMatrix: modelMatrix,\r\n        emitterModelMatrix: emitterModelMatrix\r\n      })\r\n    )\r\n  }\r\n\r\n  const xMin = -100.0\r\n  const xMax = 100.0\r\n  const yMin = -80.0\r\n  const yMax = 100.0\r\n  const zMin = -50.0\r\n  const zMax = 50.0\r\n\r\n  const colorOptions = [\r\n    {\r\n      minimumRed: 0.75,\r\n      green: 0.0,\r\n      minimumBlue: 0.8,\r\n      alpha: 1.0\r\n    },\r\n    {\r\n      red: 0.0,\r\n      minimumGreen: 0.75,\r\n      minimumBlue: 0.8,\r\n      alpha: 1.0\r\n    },\r\n    {\r\n      red: 0.0,\r\n      green: 0.0,\r\n      minimumBlue: 0.8,\r\n      alpha: 1.0\r\n    },\r\n    {\r\n      minimumRed: 0.75,\r\n      minimumGreen: 0.75,\r\n      blue: 0.0,\r\n      alpha: 1.0\r\n    }\r\n  ]\r\n\r\n  for (let i = 0; i < numberOfFireworks; ++i) {\r\n    const x = Cesium.Math.randomBetween(xMin, xMax)\r\n    const y = Cesium.Math.randomBetween(yMin, yMax)\r\n    const z = Cesium.Math.randomBetween(zMin, zMax)\r\n    const offset = new Cesium.Cartesian3(x, y, z)\r\n    const color = Cesium.Color.fromRandom(colorOptions[i % colorOptions.length])\r\n\r\n    const bursts = []\r\n    for (let j = 0; j < 3; ++j) {\r\n      bursts.push(\r\n        new Cesium.ParticleBurst({\r\n          time: Cesium.Math.nextRandomNumber() * lifetime,\r\n          minimum: burstSize,\r\n          maximum: burstSize\r\n        })\r\n      )\r\n    }\r\n\r\n    createFirework(offset, color, bursts)\r\n  }\r\n\r\n  const camera = viewer.scene.camera\r\n  const cameraOffset = new Cesium.Cartesian3(-300.0, 0.0, 0.0)\r\n  camera.lookAtTransform(modelMatrix, cameraOffset)\r\n  camera.lookAtTransform(Cesium.Matrix4.IDENTITY)\r\n\r\n  const toFireworks = Cesium.Cartesian3.subtract(\r\n    emitterInitialLocation,\r\n    cameraOffset,\r\n    new Cesium.Cartesian3()\r\n  )\r\n  Cesium.Cartesian3.normalize(toFireworks, toFireworks)\r\n  const angle =\r\n    Cesium.Math.PI_OVER_TWO -\r\n    Math.acos(Cesium.Cartesian3.dot(toFireworks, Cesium.Cartesian3.UNIT_Z))\r\n  camera.lookUp(angle)\r\n}\r\n\r\nexport default Fireworks\r\n","<script setup lang=\"ts\">\r\nimport { ContentWrap } from '@/components/ContentWrap'\r\nimport CesiumComponent from '@/components/Cesium/Cesium.component.vue'\r\n\r\nimport { useCesium } from '@/hooks/web/useCesium'\r\nimport * as Cesium from 'cesium'\r\n\r\nimport { Fireworks } from '@/components/Cesium/CesiumEffects/index'\r\n\r\nconst { mapRegister, mapMethods } = useCesium()\r\n\r\ndefineOptions({\r\n  name: 'Fireworks'\r\n})\r\n\r\nconst cesiumLoadCB = (viewer) => {\r\n  // ====================   将三维球定位到中国   =============================\r\n  // 相机飞行\r\n  viewer.camera.flyTo({\r\n    destination: Cesium.Cartesian3.fromDegrees(120.84, 30.15, 5000),\r\n    orientation: {\r\n      heading: Cesium.Math.toRadians(350.4202942851978),\r\n      pitch: Cesium.Math.toRadians(-89.74026687972041),\r\n      roll: Cesium.Math.toRadians(0.1)\r\n    },\r\n    complete: () => {\r\n      // 定位完成之后的回调函数\r\n      // 聚合\r\n      // addCesiumCluster(earthquakes)\r\n    }\r\n  })\r\n  // ========================================================================\r\n\r\n  Fireworks(viewer)\r\n}\r\n</script>\r\n\r\n<template>\r\n  <ContentWrap title=\"Fireworks\">\r\n    <div class=\"w-[100%] h-[100%]\">\r\n      <cesium-component\r\n        @register=\"mapRegister\"\r\n        :config=\"{\r\n          // homeButton: true\r\n        }\"\r\n        tiandituTk=\"80cd3c8ae46ae32fa0ac19f6d739d310\"\r\n        :cesiumLoadCB=\"cesiumLoadCB\"\r\n      />\r\n    </div>\r\n  </ContentWrap>\r\n</template>\r\n"],"names":["Fireworks","viewer","scene","modelMatrix","emitterInitialLocation","particleCanvas","getImage","context2D","minimumExplosionSize","maximumExplosionSize","particlePixelSize","burstSize","lifetime","numberOfFireworks","emitterModelMatrixScratch","createFirework","offset","color","bursts","position","emitterModelMatrix","particleToWorld","worldToParticle","size","particlePositionScratch","force","particle","position2","normalSize","minLife","life","xMin","xMax","yMin","yMax","zMin","zMax","colorOptions","i","x","y","z","j","camera","cameraOffset","toFireworks","angle","mapRegister","mapMethods","useCesium","cesiumLoadCB"],"mappings":"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"}