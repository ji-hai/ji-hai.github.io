import{_ as v}from"./ContentWrap.vue_vue_type_script_setup_true_lang-8pi8A__b.js";import{_ as b,u as y}from"./useCesium-Cl5_bCxu.js";import"./index-DKupAHv7.js";import{C as W}from"./index-DO19Fvpz.js";import{t as P}from"./index-Cjfam9dp.js";import{c as H}from"./element-plus-t0Lc7SBq.js";import{l as x,m as M,S as D,R as d,O as f,u as w,V as T,q as S}from"./vue-chunks-DuYwYYUM.js";/* empty css                  */import"./index-BR6LcWRs.js";import"./HexagonSpreadMaterialProperty-CggJxjwh.js";class I{constructor({viewer:e,positions:s={},height:t=0,bottomImg:i,wallImg:a,splitNum:r=50}){this.viewer=e,this._positions=s,this._height=t||0,this.bottomImg=i,this.wallImg=a,this.splitNum=r,this.excavateMinHeight=0,this.wellData=null,this._positions&&this._positions.length>0&&this.updateData(this._positions)}get show(){return this._show}set show(e){this._show=e,this.viewer.scene.globe.clippingPlanes&&(this.viewer.scene.globe.clippingPlanes.enabled=e),this._switchExcavate(e)}get height(){return this._height}set height(e){this._height=e,this._updateExcavateDepth(e)}updateData(e){this.clear();const s=[],t=e.length,i=new Cesium.Cartesian3,a=Cesium.Cartesian3.subtract(e[0],e[1],i);a.x>0&&(this.excavateMinHeight=9999);for(let r=0;r<t-1;++r){const o=(r+1)%t,n=Cesium.Cartesian3.midpoint(e[r],e[o],new Cesium.Cartesian3),h=Cesium.Cartographic.fromCartesian(e[r]),m=this.viewer.scene.globe.getHeight(h)||h.height;m<this.excavateMinHeight&&(this.excavateMinHeight=m);let c,l=Cesium.Cartesian3.normalize(n,new Cesium.Cartesian3);c=a?Cesium.Cartesian3.subtract(e[r],n,new Cesium.Cartesian3):Cesium.Cartesian3.subtract(e[o],n,new Cesium.Cartesian3),c=Cesium.Cartesian3.normalize(c,c);let u=Cesium.Cartesian3.cross(c,l,new Cesium.Cartesian3);u=Cesium.Cartesian3.normalize(u,u);const p=new Cesium.Plane(u,0),g=Cesium.Plane.getPointDistance(p,n);s.push(new Cesium.ClippingPlane(u,g))}this.viewer.scene.globe.depthTestAgainstTerrain=!0,this.viewer.scene.globe.clippingPlanes=new Cesium.ClippingPlaneCollection({planes:s,edgeWidth:1,edgeColor:Cesium.Color.WHITE,enabled:!0}),this._prepareWell(e),this._createWell(this.wellData)}clear(){this.viewer.scene.globe.clippingPlanes&&(this.viewer.scene.globe.clippingPlanes.removeAll(),this.bottomSurface&&this.viewer.scene.primitives.remove(this.bottomSurface),this.wellWall&&this.viewer.scene.primitives.remove(this.wellWall),delete this.bottomSurface,delete this.wellWall,this.viewer.scene.render())}_prepareWell(e){const s=this.splitNum,t=e.length;if(t!=0){for(var i=this.excavateMinHeight-this.height,a=[],r=[],o=[],n=0;n<t;n++){const h=n==t-1?0:n+1,m=Cesium.Cartographic.fromCartesian(e[n]),c=Cesium.Cartographic.fromCartesian(e[h]),l=[m.longitude,m.latitude],u=[c.longitude,c.latitude];n==0&&(o.push(new Cesium.Cartographic(l[0],l[1])),r.push(Cesium.Cartesian3.fromRadians(l[0],l[1],i)),a.push(Cesium.Cartesian3.fromRadians(l[0],l[1],0)));for(let p=1;p<=s;p++){const g=Cesium.Math.lerp(l[0],u[0],p/s),C=Cesium.Math.lerp(l[1],u[1],p/s);n==t-1&&p==s||(o.push(new Cesium.Cartographic(g,C)),r.push(Cesium.Cartesian3.fromRadians(g,C,i)),a.push(Cesium.Cartesian3.fromRadians(g,C,0)))}}this.wellData={lerp_pos:o,bottom_pos:r,no_height_top:a}}}_createWell(e){if(this.viewer.terrainProvider._layers){const s=this;this._createBottomSurface(e.bottom_pos);const t=Cesium.sampleTerrainMostDetailed(this.viewer.terrainProvider,e.lerp_pos);Cesium.when(t,function(i){for(var a=i.length,r=[],o=0;o<a;o++){const n=Cesium.Cartesian3.fromRadians(i[o].longitude,i[o].latitude,i[o].height);r.push(n)}s._createWellWall(e.bottom_pos,r)})}else this._createBottomSurface(e.bottom_pos),this._createWellWall(e.bottom_pos,e.no_height_top)}_getMinHeight(e){let s=5e6,t=null;for(let i=0;i<e.length;i++){const a=e[i].z;a<s&&(s=a,t=this._ellipsoidToLonLat(e[i]))}return t.altitude}_ellipsoidToLonLat(e){const s=this.viewer.scene.globe.ellipsoid,t=new Cesium.Cartesian3(e.x,e.y,e.z),i=s.cartesianToCartographic(t),a=Cesium.Math.toDegrees(i.latitude),r=Cesium.Math.toDegrees(i.longitude),o=i.height;return{longitude:r,latitude:a,altitude:o}}_createBottomSurface(e){if(e.length){const s=this._getMinHeight(e),t=[];for(let n=0;n<e.length;n++){const h=this._ellipsoidToLonLat(e[n]);t.push(h.longitude),t.push(h.latitude),t.push(s)}const i=new Cesium.PolygonGeometry({polygonHierarchy:new Cesium.PolygonHierarchy(Cesium.Cartesian3.fromDegreesArrayHeights(t)),perPositionHeight:!0}),a=Cesium.PolygonGeometry.createGeometry(i),r=new Cesium.Material({fabric:{type:"Image",uniforms:{image:this.bottomImg}}}),o=new Cesium.MaterialAppearance({translucent:!1,flat:!0,material:r});this.bottomSurface=new Cesium.Primitive({geometryInstances:new Cesium.GeometryInstance({geometry:a}),appearance:o,asynchronous:!1}),this.viewer.scene.primitives.add(this.bottomSurface)}}_createWellWall(e,s){const t=this._getMinHeight(e),i=[],a=[];for(let m=0;m<s.length;m++)i.push(this._ellipsoidToLonLat(s[m]).altitude),a.push(t);const r=new Cesium.WallGeometry({positions:s,maximumHeights:i,minimumHeights:a}),o=Cesium.WallGeometry.createGeometry(r),n=new Cesium.Material({fabric:{type:"Image",uniforms:{image:this.wallImg}}}),h=new Cesium.MaterialAppearance({translucent:!1,flat:!0,material:n});this.wellWall=new Cesium.Primitive({geometryInstances:new Cesium.GeometryInstance({geometry:o,attributes:{color:Cesium.ColorGeometryInstanceAttribute.fromColor(Cesium.Color.GREY)},id:"PitWall"}),appearance:h,asynchronous:!1}),this.viewer.scene.primitives.add(this.wellWall)}_switchExcavate(e){e?(this.viewer.scene.globe.material=Cesium.Material.fromType("WaJue"),this.wellWall.show=!0,this.bottomSurface.show=!0):(this.viewer.scene.globe.material=null,this.wellWall.show=!1,this.bottomSurface.show=!1)}_updateExcavateDepth(e){this.bottomSurface&&this.viewer.scene.primitives.remove(this.bottomSurface),this.wellWall&&this.viewer.scene.primitives.remove(this.wellWall);for(var s=this.wellData.lerp_pos,t=[],i=s.length,a=0;a<i;a++)t.push(Cesium.Cartesian3.fromRadians(s[a].longitude,s[a].latitude,this.excavateMinHeight-e));this.wellData.bottom_pos=t,this._createWell(this.wellData),this.viewer.scene.primitives.add(this.bottomSurface),this.viewer.scene.primitives.add(this.wellWall)}}const G={class:"h-[calc(100vh-280px)]"},$=x({name:"TerrainClipPlan",__name:"TerrainClipPlan",setup(_){const{mapRegister:e,mapMethods:s}=y();let t,i;const a=o=>{t=new W(o),i=new I({viewer:o,height:200,splitNum:100,wallImg:"src/assets/image/excavate_side_min.jpg",bottomImg:"src/assets/image/excavate_bottom_min.jpg"})},r=()=>{t.drawPolygonGraphics({callback:(o,n)=>{t.drawLayer.entities.remove(n),i.updateData(P(o))}})};return(o,n)=>(M(),D(w(v),{title:"地形开挖"},{default:d(()=>[f(w(H),{onClick:r},{default:d(()=>[T("开挖")]),_:1}),S("div",G,[f(b,{onRegister:w(e),config:{},tiandituTk:"80cd3c8ae46ae32fa0ac19f6d739d310",cesiumLoadCB:a},null,8,["onRegister"])])]),_:1}))}});export{$ as default};
//# sourceMappingURL=TerrainClipPlan-C7yY84AP.js.map
