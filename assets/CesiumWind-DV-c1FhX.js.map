{"version":3,"file":"CesiumWind-DV-c1FhX.js","sources":["../../public/js/cesium-wind.esm.js","../../public/js/storm/Storm.js","../../public/js/storm/StormField.js","../../src/views/CesiumPlugin/CesiumWind.vue"],"sourcesContent":["/*!\n * author: joe <qj5657@gmail.com>\n * cesium-wind 1.0.3\n * build-time: 2020-9-23 11:17\n * LICENSE: MIT\n * (c) 2020-2020 https://github.com/QJvic/cesium-wind\n */\n\nimport { Cartesian3, SceneTransforms, Cartesian2, Math as Math$1, Ellipsoid, EllipsoidalOccluder } from 'cesium';\n\n/*!\n * author: sakitam-fdd <smilefdd@gmail.com> \n * wind-core v1.0.0-alpha.9\n * build-time: 2020-7-5 23:35\n * LICENSE: MIT\n * (c) 2017-2020 https://github.com/sakitam-fdd/wind-layer#readme\n */\n/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\nfunction __spreadArrays() {\n    var arguments$1 = arguments;\n\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) { s += arguments$1[i].length; }\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        { for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            { r[k] = a[j]; } }\n    return r;\n}\n\nif (!Array.isArray) {\n    // @ts-ignore\n    Array.isArray = function (arg) {\n        return Object.prototype.toString.call(arg) === '[object Array]';\n    };\n}\nif (typeof Object.assign != 'function') {\n    // Must be writable: true, enumerable: false, configurable: true\n    Object.defineProperty(Object, \"assign\", {\n        value: function assign(target, varArgs) {\n            var arguments$1 = arguments;\n\n            if (target == null) { // TypeError if undefined or null\n                throw new TypeError('Cannot convert undefined or null to object');\n            }\n            var to = Object(target);\n            for (var index = 1; index < arguments.length; index++) {\n                var nextSource = arguments$1[index];\n                if (nextSource != null) { // Skip over if undefined or null\n                    for (var nextKey in nextSource) {\n                        // Avoid bugs when hasOwnProperty is shadowed\n                        if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n                            to[nextKey] = nextSource[nextKey];\n                        }\n                    }\n                }\n            }\n            return to;\n        },\n        writable: true,\n        configurable: true\n    });\n}\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar symToStringTag = typeof Symbol !== 'undefined' ? Symbol.toStringTag : undefined;\nfunction baseGetTag(value) {\n    if (value === null) {\n        return value === undefined ? '[object Undefined]' : '[object Null]';\n    }\n    if (!(symToStringTag && symToStringTag in Object(value))) {\n        return toString.call(value);\n    }\n    var isOwn = hasOwnProperty.call(value, symToStringTag);\n    var tag = value[symToStringTag];\n    var unmasked = false;\n    try {\n        value[symToStringTag] = undefined;\n        unmasked = true;\n    }\n    catch (e) {\n    }\n    var result = Object.prototype.toString.call(value);\n    if (unmasked) {\n        if (isOwn) {\n            value[symToStringTag] = tag;\n        }\n        else {\n            delete value[symToStringTag];\n        }\n    }\n    return result;\n}\n/**\n * 判断是否为函数\n * @param value\n * @returns {boolean}\n */\nfunction isFunction(value) {\n    if (!isObject(value)) {\n        return false;\n    }\n    var tag = baseGetTag(value);\n    return tag === '[object Function]' || tag === '[object AsyncFunction]' ||\n        tag === '[object GeneratorFunction]' || tag === '[object Proxy]';\n}\n/**\n * 判断是否为对象\n * @param value\n * @returns {boolean}\n */\nfunction isObject(value) {\n    var type = typeof value;\n    return value !== null && (type === 'object' || type === 'function');\n}\n/**\n * 判断是否为合法字符串\n * @param value\n * @returns {boolean}\n */\nfunction isString(value) {\n    if (value == null) {\n        return false;\n    }\n    return typeof value === 'string' || (value.constructor !== null && value.constructor === String);\n}\n/**\n * 判断是否为数字\n * @param value\n * @returns {boolean}\n */\nfunction isNumber(value) {\n    return Object.prototype.toString.call(value) === '[object Number]' && !isNaN(value);\n}\n/**\n * check is array\n * @param arr\n */\nfunction isArray(arr) {\n    return Array.isArray(arr);\n}\n/**\n * assign object\n * @param target\n * @param sources\n */\nfunction assign(target) {\n    var arguments$1 = arguments;\n\n    var sources = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        sources[_i - 1] = arguments$1[_i];\n    }\n    return Object.assign.apply(Object, __spreadArrays([target], sources));\n}\n/**\n * Get floored division\n * @param a\n * @param n\n * @returns {Number} returns remainder of floored division,\n * i.e., floor(a / n). Useful for consistent modulo of negative numbers.\n * See http://en.wikipedia.org/wiki/Modulo_operation.\n */\nfunction floorMod(a, n) {\n    return a - n * Math.floor(a / n);\n}\n/**\n * 检查值是否合法\n * @param val\n * @returns {boolean}\n */\nfunction isValide(val) {\n    return val !== undefined && val !== null && !isNaN(val);\n}\n/**\n * format gfs json to vector\n * @param data\n */\nfunction formatData(data) {\n    var uComp;\n    var vComp;\n    {\n        console.time('format-data');\n    }\n    data.forEach(function (record) {\n        switch (record.header.parameterCategory + \",\" + record.header.parameterNumber) {\n            case \"1,2\":\n            case \"2,2\":\n                uComp = record;\n                break;\n            case \"1,3\":\n            case \"2,3\":\n                vComp = record;\n                break;\n        }\n    });\n    // @ts-ignore\n    if (!vComp || !uComp)\n        { return; }\n    var header = uComp.header;\n    var vectorField = new Field({\n        xmin: header.lo1,\n        ymin: header.la1,\n        xmax: header.lo2,\n        ymax: header.la2,\n        deltaX: header.dx,\n        deltaY: header.dy,\n        cols: header.nx,\n        rows: header.ny,\n        us: uComp.data,\n        vs: vComp.data\n    });\n    {\n        console.timeEnd('format-data');\n    }\n    return vectorField;\n}\n/**\n * 移除 dom\n * @param node\n * @returns {removeDomNode}\n */\nfunction removeDomNode(node) {\n    if (!node) {\n        return null;\n    }\n    if (node.parentNode) {\n        node.parentNode.removeChild(node);\n    }\n    return node;\n}\n\n// from: https://sourcegraph.com/github.com/IHCantabria/Leaflet.CanvasLayer.Field/-/blob/src/Vector.js?utm_source=share\nvar Vector = /** @class */ (function () {\n    function Vector(u, v) {\n        this.u = u;\n        this.v = v;\n        this.m = this.magnitude();\n    }\n    /**\n     * the vector value\n     * 向量值（流体强度）\n     * @returns {Number}\n     */\n    Vector.prototype.magnitude = function () {\n        // Math.pow(u, 2)\n        // Math.pow(v, 2)\n        return Math.sqrt(this.u * this.u + this.v * this.v);\n    };\n    /**\n     * Angle in degrees (0 to 360º) --> Towards\n     * 流体方向\n     * N is 0º and E is 90º\n     * @returns {Number}\n     */\n    Vector.prototype.directionTo = function () {\n        var verticalAngle = Math.atan2(this.u, this.v);\n        var inDegrees = verticalAngle * (180.0 / Math.PI);\n        if (inDegrees < 0) {\n            inDegrees += 360.0;\n        }\n        return inDegrees;\n    };\n    /**\n     * Angle in degrees (0 to 360º) From x-->\n     * N is 0º and E is 90º\n     * @returns {Number}\n     */\n    Vector.prototype.directionFrom = function () {\n        var a = this.directionTo();\n        return (a + 180.0) % 360.0;\n    };\n    return Vector;\n}());\n\nvar Field = /** @class */ (function () {\n    function Field(params) {\n        this.grid = [];\n        this.xmin = params.xmin;\n        this.xmax = params.xmax;\n        this.ymin = params.ymin;\n        this.ymax = params.ymax;\n        this.cols = params.cols; // 列数\n        this.rows = params.rows; // 行数\n        this.us = params.us; //\n        this.vs = params.vs;\n        this.deltaX = params.deltaX; // x 方向增量\n        this.deltaY = params.deltaY; // y方向增量\n        if (this.deltaY < 0 && this.ymin < this.ymax) {\n            console.warn('[wind-core]: The data is flipY');\n        }\n        else {\n            this.ymin = Math.min(params.ymax, params.ymin);\n            this.ymax = Math.max(params.ymax, params.ymin);\n        }\n        this.isFields = true;\n        var cols = Math.ceil((this.xmax - this.xmin) / params.deltaX); // 列\n        var rows = Math.ceil((this.ymax - this.ymin) / params.deltaY); // 行\n        if (cols !== this.cols || rows !== this.rows) {\n            console.warn('[wind-core]: The data grid not equal');\n        }\n        // Math.floor(ni * Δλ) >= 360;\n        // lon lat 经度 纬度\n        this.isContinuous = Math.floor(this.cols * params.deltaX) >= 360;\n        this.wrappedX = 'wrappedX' in params ? params.wrappedX : this.xmax > 180; // [0, 360] --> [-180, 180];\n        this.grid = this.buildGrid();\n        this.range = this.calculateRange();\n    }\n    // from https://github.com/sakitam-fdd/wind-layer/blob/95368f9433/src/windy/windy.js#L110\n    Field.prototype.buildGrid = function () {\n        var grid = [];\n        var p = 0;\n        var _a = this, rows = _a.rows, cols = _a.cols, us = _a.us, vs = _a.vs;\n        for (var j = 0; j < rows; j++) {\n            var row = [];\n            for (var i = 0; i < cols; i++, p++) {\n                var u = us[p];\n                var v = vs[p];\n                var valid = this.isValid(u) && this.isValid(v);\n                row[i] = valid ? new Vector(u, v) : null;\n            }\n            if (this.isContinuous) {\n                row.push(row[0]);\n            }\n            grid[j] = row;\n        }\n        return grid;\n    };\n    Field.prototype.release = function () {\n        this.grid = [];\n    };\n    /**\n     * grib data extent\n     * 格点数据范围\n     */\n    Field.prototype.extent = function () {\n        return [\n            this.xmin,\n            this.ymin,\n            this.xmax,\n            this.ymax ];\n    };\n    /**\n     * Bilinear interpolation for Vector\n     * 针对向量进行双线性插值\n     * https://en.wikipedia.org/wiki/Bilinear_interpolation\n     * @param   {Number} x\n     * @param   {Number} y\n     * @param   {Number[]} g00\n     * @param   {Number[]} g10\n     * @param   {Number[]} g01\n     * @param   {Number[]} g11\n     * @returns {Vector}\n     */\n    Field.prototype.bilinearInterpolateVector = function (x, y, g00, g10, g01, g11) {\n        var rx = 1 - x;\n        var ry = 1 - y;\n        var a = rx * ry;\n        var b = x * ry;\n        var c = rx * y;\n        var d = x * y;\n        var u = g00.u * a + g10.u * b + g01.u * c + g11.u * d;\n        var v = g00.v * a + g10.v * b + g01.v * c + g11.v * d;\n        return new Vector(u, v);\n    };\n    /**\n     * calculate vector value range\n     */\n    Field.prototype.calculateRange = function () {\n        if (!this.grid || !this.grid[0])\n            { return; }\n        var rows = this.grid.length;\n        var cols = this.grid[0].length;\n        // const vectors = [];\n        var min;\n        var max;\n        // @from: https://stackoverflow.com/questions/13544476/how-to-find-max-and-min-in-array-using-minimum-comparisons\n        for (var j = 0; j < rows; j++) {\n            for (var i = 0; i < cols; i++) {\n                var vec = this.grid[j][i];\n                if (vec !== null) {\n                    var val = vec.m || vec.magnitude();\n                    // vectors.push();\n                    if (min === undefined) {\n                        min = val;\n                    }\n                    else if (max === undefined) {\n                        max = val;\n                        // update min max\n                        // 1. Pick 2 elements(a, b), compare them. (say a > b)\n                        min = Math.min(min, max);\n                        max = Math.max(min, max);\n                    }\n                    else {\n                        // 2. Update min by comparing (min, b)\n                        // 3. Update max by comparing (max, a)\n                        min = Math.min(val, min);\n                        max = Math.max(val, max);\n                    }\n                }\n            }\n        }\n        return [min, max];\n    };\n    /**\n     * 检查 uv是否合法\n     * @param x\n     * @private\n     */\n    Field.prototype.isValid = function (x) {\n        return x !== null && x !== undefined;\n    };\n    Field.prototype.getWrappedLongitudes = function () {\n        var xmin = this.xmin;\n        var xmax = this.xmax;\n        if (this.wrappedX) {\n            if (this.isContinuous) {\n                xmin = -180;\n                xmax = 180;\n            }\n            else {\n                // not sure about this (just one particular case, but others...?)\n                xmax = this.xmax - 360;\n                xmin = this.xmin - 360;\n                /* eslint-disable no-console */\n                // console.warn(`are these xmin: ${xmin} & xmax: ${xmax} OK?`);\n                // TODO: Better throw an exception on no-controlled situations.\n                /* eslint-enable no-console */\n            }\n        }\n        return [xmin, xmax];\n    };\n    Field.prototype.contains = function (lon, lat) {\n        var _a = this.getWrappedLongitudes(), xmin = _a[0], xmax = _a[1];\n        var longitudeIn = lon >= xmin && lon <= xmax;\n        var latitudeIn;\n        if (this.deltaY >= 0) {\n            latitudeIn = lat >= this.ymin && lat <= this.ymax;\n        }\n        else {\n            latitudeIn = lat >= this.ymax && lat <= this.ymin;\n        }\n        return longitudeIn && latitudeIn;\n    };\n    /**\n     * 获取经纬度所在的位置索引\n     * @param lon\n     * @param lat\n     */\n    Field.prototype.getDecimalIndexes = function (lon, lat) {\n        var i = floorMod(lon - this.xmin, 360) / this.deltaX; // calculate longitude index in wrapped range [0, 360)\n        var j = (this.ymax - lat) / this.deltaY; // calculate latitude index in direction +90 to -90\n        return [i, j];\n    };\n    /**\n     * Nearest value at lon-lat coordinates\n     * 线性插值\n     * @param lon\n     * @param lat\n     */\n    Field.prototype.valueAt = function (lon, lat) {\n        if (!this.contains(lon, lat))\n            { return null; }\n        var indexes = this.getDecimalIndexes(lon, lat);\n        var ii = Math.floor(indexes[0]);\n        var jj = Math.floor(indexes[1]);\n        var ci = this.clampColumnIndex(ii);\n        var cj = this.clampRowIndex(jj);\n        return this.valueAtIndexes(ci, cj);\n    };\n    /**\n     * Get interpolated grid value lon-lat coordinates\n     * 双线性插值\n     * @param lon\n     * @param lat\n     */\n    Field.prototype.interpolatedValueAt = function (lon, lat) {\n        if (!this.contains(lon, lat))\n            { return null; }\n        var _a = this.getDecimalIndexes(lon, lat), i = _a[0], j = _a[1];\n        return this.interpolatePoint(i, j);\n    };\n    Field.prototype.hasValueAt = function (lon, lat) {\n        var value = this.valueAt(lon, lat);\n        return value !== null;\n    };\n    /**\n     * 基于向量的双线性插值\n     * @param i\n     * @param j\n     */\n    Field.prototype.interpolatePoint = function (i, j) {\n        //         1      2           After converting λ and φ to fractional grid indexes i and j, we find the\n        //        fi  i   ci          four points 'G' that enclose point (i, j). These points are at the four\n        //         | =1.4 |           corners specified by the floor and ceiling of i and j. For example, given\n        //      ---G--|---G--- fj 8   i = 1.4 and j = 8.3, the four surrounding grid points are (1, 8), (2, 8),\n        //    j ___|_ .   |           (1, 9) and (2, 9).\n        //  =8.3   |      |\n        //      ---G------G--- cj 9   Note that for wrapped grids, the first column is duplicated as the last\n        //         |      |           column, so the index ci can be used without taking a modulo.\n        var indexes = this.getFourSurroundingIndexes(i, j);\n        var fi = indexes[0], ci = indexes[1], fj = indexes[2], cj = indexes[3];\n        var values = this.getFourSurroundingValues(fi, ci, fj, cj);\n        if (values) {\n            var g00 = values[0], g10 = values[1], g01 = values[2], g11 = values[3];\n            // @ts-ignore\n            return this.bilinearInterpolateVector(i - fi, j - fj, g00, g10, g01, g11);\n        }\n        return null;\n    };\n    /**\n     * Check the column index is inside the field,\n     * adjusting to min or max when needed\n     * @private\n     * @param   {Number} ii - index\n     * @returns {Number} i - inside the allowed indexes\n     */\n    Field.prototype.clampColumnIndex = function (ii) {\n        var i = ii;\n        if (ii < 0) {\n            i = 0;\n        }\n        var maxCol = this.cols - 1;\n        if (ii > maxCol) {\n            i = maxCol;\n        }\n        return i;\n    };\n    /**\n     * Check the row index is inside the field,\n     * adjusting to min or max when needed\n     * @private\n     * @param   {Number} jj index\n     * @returns {Number} j - inside the allowed indexes\n     */\n    Field.prototype.clampRowIndex = function (jj) {\n        var j = jj;\n        if (jj < 0) {\n            j = 0;\n        }\n        var maxRow = this.rows - 1;\n        if (jj > maxRow) {\n            j = maxRow;\n        }\n        return j;\n    };\n    /**\n     * from: https://github.com/IHCantabria/Leaflet.CanvasLayer.Field/blob/master/src/Field.js#L252\n     * 计算索引位置周围的数据\n     * @private\n     * @param   {Number} i - decimal index\n     * @param   {Number} j - decimal index\n     * @returns {Array} [fi, ci, fj, cj]\n     */\n    Field.prototype.getFourSurroundingIndexes = function (i, j) {\n        var fi = Math.floor(i); // 左\n        var ci = fi + 1; // 右\n        // duplicate colum to simplify interpolation logic (wrapped value)\n        if (this.isContinuous && ci >= this.cols) {\n            ci = 0;\n        }\n        ci = this.clampColumnIndex(ci);\n        var fj = this.clampRowIndex(Math.floor(j)); // 上 纬度方向索引（取整）\n        var cj = this.clampRowIndex(fj + 1); // 下\n        return [fi, ci, fj, cj];\n    };\n    /**\n     * from https://github.com/IHCantabria/Leaflet.CanvasLayer.Field/blob/master/src/Field.js#L277\n     * Get four surrounding values or null if not available,\n     * from 4 integer indexes\n     * @private\n     * @param   {Number} fi\n     * @param   {Number} ci\n     * @param   {Number} fj\n     * @param   {Number} cj\n     * @returns {Array}\n     */\n    Field.prototype.getFourSurroundingValues = function (fi, ci, fj, cj) {\n        var row;\n        if ((row = this.grid[fj])) {\n            var g00 = row[fi]; // << left\n            var g10 = row[ci]; // right >>\n            if (this.isValid(g00) &&\n                this.isValid(g10) &&\n                (row = this.grid[cj])) {\n                // lower row vv\n                var g01 = row[fi]; // << left\n                var g11 = row[ci]; // right >>\n                if (this.isValid(g01) && this.isValid(g11)) {\n                    return [g00, g10, g01, g11]; // 4 values found!\n                }\n            }\n        }\n        return null;\n    };\n    /**\n     * Value for grid indexes\n     * @param   {Number} i - column index (integer)\n     * @param   {Number} j - row index (integer)\n     * @returns {Vector|Number}\n     */\n    Field.prototype.valueAtIndexes = function (i, j) {\n        return this.grid[j][i]; // <-- j,i !!\n    };\n    /**\n     * Lon-Lat for grid indexes\n     * @param   {Number} i - column index (integer)\n     * @param   {Number} j - row index (integer)\n     * @returns {Number[]} [lon, lat]\n     */\n    Field.prototype.lonLatAtIndexes = function (i, j) {\n        var lon = this.longitudeAtX(i);\n        var lat = this.latitudeAtY(j);\n        return [lon, lat];\n    };\n    /**\n     * Longitude for grid-index\n     * @param   {Number} i - column index (integer)\n     * @returns {Number} longitude at the center of the cell\n     */\n    Field.prototype.longitudeAtX = function (i) {\n        var halfXPixel = this.deltaX / 2.0;\n        var lon = this.xmin + halfXPixel + i * this.deltaX;\n        if (this.wrappedX) {\n            lon = lon > 180 ? lon - 360 : lon;\n        }\n        return lon;\n    };\n    /**\n     * Latitude for grid-index\n     * @param   {Number} j - row index (integer)\n     * @returns {Number} latitude at the center of the cell\n     */\n    Field.prototype.latitudeAtY = function (j) {\n        var halfYPixel = this.deltaY / 2.0;\n        return this.ymax - halfYPixel - j * this.deltaY;\n    };\n    /**\n     * 生成粒子位置\n     * @param o\n     * @param width\n     * @param height\n     * @param unproject\n     */\n    Field.prototype.randomize = function (o, width, height, unproject) {\n        if (o === void 0) { o = {}; }\n        var i = (Math.random() * (width || this.cols)) | 0;\n        var j = (Math.random() * (height || this.rows)) | 0;\n        var coords = unproject([i, j]);\n        if (coords !== null) {\n            o.x = coords[0];\n            o.y = coords[1];\n        }\n        else {\n            o.x = this.longitudeAtX(i);\n            o.y = this.latitudeAtY(j);\n        }\n        return o;\n    };\n    /**\n     * check is custom field\n     */\n    Field.prototype.checkFields = function () {\n        return this.isFields;\n    };\n    Field.prototype.startBatchInterpolate = function (width, height, unproject) { };\n    return Field;\n}());\n\nvar defaultOptions = {\n    globalAlpha: 0.9,\n    lineWidth: 1,\n    colorScale: '#fff',\n    velocityScale: 1 / 25,\n    // particleAge: 90, // 粒子在重新生成之前绘制的最大帧数\n    maxAge: 90,\n    // particleMultiplier: 1 / 300, // TODO: PATHS = Math.round(width * height * particleMultiplier);\n    paths: 800,\n    frameRate: 20,\n    useCoordsDraw: true,\n    gpet: true\n};\nfunction indexFor(m, min, max, colorScale) {\n    return Math.max(0, Math.min((colorScale.length - 1), Math.round((m - min) / (max - min) * (colorScale.length - 1))));\n}\nvar BaseLayer = /** @class */ (function () {\n    function BaseLayer(ctx, options, field) {\n        this.particles = [];\n        this.generated = false;\n        this.ctx = ctx;\n        if (!this.ctx) {\n            throw new Error('ctx error');\n        }\n        this.animate = this.animate.bind(this);\n        this.setOptions(options);\n        if (field) {\n            this.updateData(field);\n        }\n    }\n    BaseLayer.prototype.setOptions = function (options) {\n        this.options = Object.assign({}, defaultOptions, options);\n        var _a = this.ctx.canvas, width = _a.width, height = _a.height;\n        if (('particleAge' in options) && !('maxAge' in options) && isNumber(this.options.particleAge)) {\n            // @ts-ignore\n            this.options.maxAge = this.options.particleAge;\n        }\n        if (('particleMultiplier' in options) && !('paths' in options) && isNumber(this.options.particleMultiplier)) {\n            // @ts-ignore\n            this.options.paths = Math.round(width * height * this.options.particleMultiplier);\n        }\n        this.prerender();\n    };\n    BaseLayer.prototype.getOptions = function () {\n        return this.options;\n    };\n    BaseLayer.prototype.updateData = function (field) {\n        this.field = field;\n        if (!this.generated)\n            { return; }\n        this.particles = this.prepareParticlePaths();\n    };\n    BaseLayer.prototype.moveParticles = function () {\n        var _a = this.ctx.canvas, width = _a.width, height = _a.height;\n        var particles = this.particles;\n        // 清空组\n        var maxAge = this.options.maxAge;\n        var optVelocityScale = isFunction(this.options.velocityScale)\n            // @ts-ignore\n            ? this.options.velocityScale()\n            : this.options.velocityScale;\n        var velocityScale = optVelocityScale;\n        var i = 0;\n        var len = particles.length;\n        for (; i < len; i++) {\n            var particle = particles[i];\n            if (particle.age > maxAge) {\n                particle.age = 0;\n                // restart, on a random x,y\n                this.field.randomize(particle, width, height, this.unproject);\n            }\n            var x = particle.x;\n            var y = particle.y;\n            var vector = this.field.interpolatedValueAt(x, y);\n            if (vector === null) {\n                particle.age = maxAge;\n            }\n            else {\n                var xt = x + vector.u * velocityScale;\n                var yt = y + vector.v * velocityScale;\n                if (this.field.hasValueAt(xt, yt)) {\n                    // Path from (x,y) to (xt,yt) is visible, so add this particle to the appropriate draw bucket.\n                    particle.xt = xt;\n                    particle.yt = yt;\n                    particle.m = vector.m;\n                }\n                else {\n                    // Particle isn't visible, but it still moves through the field.\n                    particle.x = xt;\n                    particle.y = yt;\n                    particle.age = maxAge;\n                }\n            }\n            particle.age++;\n        }\n    };\n    BaseLayer.prototype.fadeIn = function () {\n        var prev = this.ctx.globalCompositeOperation; // lighter\n        this.ctx.globalCompositeOperation = 'destination-in';\n        this.ctx.fillRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\n        this.ctx.globalCompositeOperation = prev;\n    };\n    BaseLayer.prototype.drawParticles = function () {\n        var _a;\n        var particles = this.particles;\n        this.fadeIn();\n        this.ctx.globalAlpha = this.options.globalAlpha;\n        this.ctx.fillStyle = \"rgba(0, 0, 0, \" + this.options.globalAlpha + \")\";\n        this.ctx.lineWidth = (isNumber(this.options.lineWidth) ? this.options.lineWidth : 1);\n        this.ctx.strokeStyle = (isString(this.options.colorScale) ? this.options.colorScale : '#fff');\n        var i = 0;\n        var len = particles.length;\n        if (this.field && len > 0) {\n            var min = void 0;\n            var max = void 0;\n            // 如果配置了风速范围\n            if (isValide(this.options.minVelocity) && isValide(this.options.maxVelocity)) {\n                min = this.options.minVelocity;\n                max = this.options.maxVelocity;\n            }\n            else { // 未配置风速范围取格点数据中的最大风速和最小风速\n                _a = this.field.range, min = _a[0], max = _a[1];\n            }\n            for (; i < len; i++) {\n                this[this.options.useCoordsDraw ? 'drawCoordsParticle' : 'drawPixelParticle'](particles[i], min, max);\n            }\n        }\n    };\n    /**\n     * 用于绘制像素粒子\n     * @param particle\n     * @param min\n     * @param max\n     */\n    BaseLayer.prototype.drawPixelParticle = function (particle, min, max) {\n        // TODO 需要判断粒子是否超出视野\n        // this.ctx.strokeStyle = color;\n        var pointPrev = [particle.x, particle.y];\n        // when xt isn't exit\n        var pointNext = [particle.xt, particle.yt];\n        if (pointNext && pointPrev && isValide(pointNext[0]) &&\n            isValide(pointNext[1]) && isValide(pointPrev[0]) &&\n            isValide(pointPrev[1])\n            && particle.age <= this.options.maxAge) {\n            this.ctx.beginPath();\n            this.ctx.moveTo(pointPrev[0], pointPrev[1]);\n            this.ctx.lineTo(pointNext[0], pointNext[1]);\n            if (isFunction(this.options.colorScale)) {\n                // @ts-ignore\n                this.ctx.strokeStyle = this.options.colorScale(particle.m);\n            }\n            else if (Array.isArray(this.options.colorScale)) {\n                var colorIdx = indexFor(particle.m, min, max, this.options.colorScale);\n                this.ctx.strokeStyle = this.options.colorScale[colorIdx];\n            }\n            if (isFunction(this.options.lineWidth)) {\n                // @ts-ignore\n                this.ctx.lineWidth = this.options.lineWidth(particle.m);\n            }\n            particle.x = particle.xt;\n            particle.y = particle.yt;\n            this.ctx.stroke();\n        }\n    };\n    /**\n     * 用于绘制坐标粒子\n     * @param particle\n     * @param min\n     * @param max\n     */\n    BaseLayer.prototype.drawCoordsParticle = function (particle, min, max) {\n        // TODO 需要判断粒子是否超出视野\n        // this.ctx.strokeStyle = color;\n        var source = [particle.x, particle.y];\n        // when xt isn't exit\n        var target = [particle.xt, particle.yt];\n        if (target && source && isValide(target[0]) &&\n            isValide(target[1]) && isValide(source[0]) &&\n            isValide(source[1]) &&\n            this.intersectsCoordinate(target)\n            && particle.age <= this.options.maxAge) {\n            var pointPrev = this.project(source);\n            var pointNext = this.project(target);\n            if (pointPrev && pointNext) {\n                this.ctx.beginPath();\n                this.ctx.moveTo(pointPrev[0], pointPrev[1]);\n                this.ctx.lineTo(pointNext[0], pointNext[1]);\n                particle.x = particle.xt;\n                particle.y = particle.yt;\n                if (isFunction(this.options.colorScale)) {\n                    // @ts-ignore\n                    this.ctx.strokeStyle = this.options.colorScale(particle.m);\n                }\n                else if (Array.isArray(this.options.colorScale)) {\n                    var colorIdx = indexFor(particle.m, min, max, this.options.colorScale);\n                    this.ctx.strokeStyle = this.options.colorScale[colorIdx];\n                }\n                if (isFunction(this.options.lineWidth)) {\n                    // @ts-ignore\n                    this.ctx.lineWidth = this.options.lineWidth(particle.m);\n                }\n                this.ctx.stroke();\n            }\n        }\n    };\n    BaseLayer.prototype.prepareParticlePaths = function () {\n        var _a = this.ctx.canvas, width = _a.width, height = _a.height;\n        var particleCount = typeof this.options.paths === 'function' ? this.options.paths(this) : this.options.paths;\n        var particles = [];\n        if (!this.field)\n            { return []; }\n        if ('startBatchInterpolate' in this.field) {\n            this.field.startBatchInterpolate(width, height, this.unproject);\n        }\n        var i = 0;\n        for (; i < particleCount; i++) {\n            particles.push(this.field.randomize({\n                age: this.randomize()\n            }, width, height, this.unproject));\n        }\n        return particles;\n    };\n    BaseLayer.prototype.randomize = function () {\n        return Math.floor(Math.random() * this.options.maxAge); // 例如最大生成90帧插值粒子路径\n    };\n    // @ts-ignore\n    BaseLayer.prototype.project = function () {\n        var arguments$1 = arguments;\n\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments$1[_i];\n        }\n        throw new Error('project must be overriden');\n    };\n    // @ts-ignore\n    BaseLayer.prototype.unproject = function () {\n        var arguments$1 = arguments;\n\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments$1[_i];\n        }\n        throw new Error('unproject must be overriden');\n    };\n    BaseLayer.prototype.intersectsCoordinate = function (coordinates) {\n        throw new Error('must be overriden');\n    };\n    BaseLayer.prototype.clearCanvas = function () {\n        this.stop();\n        this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\n        this.forceStop = false;\n    };\n    BaseLayer.prototype.start = function () {\n        this.starting = true;\n        this.forceStop = false;\n        this._then = Date.now();\n        this.animate();\n    };\n    BaseLayer.prototype.stop = function () {\n        cancelAnimationFrame(this.animationLoop);\n        this.starting = false;\n        this.forceStop = true;\n    };\n    BaseLayer.prototype.animate = function () {\n        if (this.animationLoop)\n            { cancelAnimationFrame(this.animationLoop); }\n        this.animationLoop = requestAnimationFrame(this.animate);\n        var now = Date.now();\n        var delta = now - this._then;\n        if (delta > this.options.frameRate) {\n            this._then = now - (delta % this.options.frameRate);\n            this.render();\n        }\n    };\n    /**\n     * 渲染前处理\n     */\n    BaseLayer.prototype.prerender = function () {\n        this.generated = false;\n        if (!this.field)\n            { return; }\n        this.particles = this.prepareParticlePaths();\n        this.generated = true;\n        if (!this.starting && !this.forceStop) {\n            this.starting = true;\n            this._then = Date.now();\n            this.animate();\n        }\n    };\n    /**\n     * 开始渲染\n     */\n    BaseLayer.prototype.render = function () {\n        this.moveParticles();\n        this.drawParticles();\n        this.postrender();\n    };\n    /**\n     * each frame render end\n     */\n    BaseLayer.prototype.postrender = function () { };\n    BaseLayer.Field = Field;\n    return BaseLayer;\n}());\n\nclass CesiumWind {\n  constructor(data, options = {}) {\n    this.canvas = null;\n    this.wind = null;\n    this.field = null;\n    this.viewer = null;\n    this.options = assign({}, options);\n    this.pickWindOptions();\n\n    const canvas = document.createElement('canvas');\n    canvas.style.cssText =\n      'position:absolute; left:0; top:0;user-select:none;pointer-events: none;';\n    canvas.className = 'cesium-wind-j';\n    this.canvas = canvas;\n\n    if (data) {\n      this.setData(data);\n    }\n  }\n\n  addTo(viewer) {\n    this.viewer = viewer;\n    this.appendCanvas();\n    this.render(this.canvas);\n  }\n\n  remove() {\n    if (!this.viewer) {\n      return;\n    }\n    if (this.wind) {\n      this.wind.stop();\n    }\n    if (this.canvas) {\n      removeDomNode(this.canvas);\n    }\n    delete this.canvas;\n  }\n\n  removeLayer() {\n    this.remove();\n  }\n\n  setData(data) {\n    if (data && data.checkFields && data.checkFields()) {\n      this.field = data;\n    } else if (isArray(data)) {\n      this.field = formatData(data);\n    } else {\n      console.error('Illegal data');\n    }\n\n    if (this.viewer && this.canvas && this.field) {\n      this.wind.updateData(this.field);\n      this.appendCanvas();\n      this.render(this.canvas);\n    }\n\n    return this;\n  }\n\n  getData() {\n    return this.field;\n  }\n\n  getWindOptions() {\n    return this.options.windOptions || {};\n  }\n\n  pickWindOptions() {\n    Object.keys(defaultOptions).forEach((key) => {\n      if (key in this.options) {\n        if (this.options.windOptions === undefined) {\n          this.options.windOptions = {};\n        }\n        this.options.windOptions[key] = this.options[key];\n      }\n    });\n  }\n\n  getContext() {\n    if (this.canvas === null) {\n      return;\n    }\n    return this.canvas.getContext('2d');\n  }\n\n  appendCanvas() {\n    if (!this.viewer || !this.canvas) {\n      return;\n    }\n    if (document.querySelector('.cesium-wind-j')) {\n      return;\n    }\n    this.adjustSize();\n    const cesiumWidget = this.viewer.canvas.parentNode;\n    cesiumWidget.appendChild(this.canvas);\n  }\n\n  adjustSize() {\n    const viewer = this.viewer;\n    const canvas = this.canvas;\n    const {width, height} = viewer.canvas;\n    const devicePixelRatio = 1;\n    canvas.width = width * devicePixelRatio;\n    canvas.height = height * devicePixelRatio;\n    canvas.style.width = width + 'px';\n    canvas.style.height = height + 'px';\n  }\n\n  render(canvas) {\n    if (!this.getData() || !this.viewer) {\n      return this;\n    }\n    const opt = this.getWindOptions();\n    if (canvas && !this.wind) {\n      const data = this.getData();\n\n      const ctx = this.getContext();\n\n      if (ctx) {\n        this.wind = new BaseLayer(ctx, opt, data);\n\n        this.wind.project = this.project.bind(this);\n        this.wind.unproject = this.unproject.bind(this);\n        this.wind.intersectsCoordinate = this.intersectsCoordinate.bind(this);\n        this.wind.postrender = () => {\n        };\n      }\n    }\n\n    if (this.wind) {\n      this.wind.prerender();\n      this.wind.render();\n    }\n\n    return this;\n  }\n\n  project(coordinate) {\n    const position = Cartesian3.fromDegrees(\n      coordinate[0],\n      coordinate[1],\n    );\n    const scene = this.viewer.scene;\n    const sceneCoor = SceneTransforms.wgs84ToWindowCoordinates(\n      scene,\n      position,\n    );\n    return [sceneCoor.x, sceneCoor.y];\n  }\n\n  unproject(pixel) {\n    const viewer = this.viewer;\n    const pick = new Cartesian2(pixel[0], pixel[1]);\n    const cartesian = viewer.scene.globe.pick(\n      viewer.camera.getPickRay(pick),\n      viewer.scene,\n    );\n\n    if (!cartesian) {\n      return null;\n    }\n\n    const ellipsoid = viewer.scene.globe.ellipsoid;\n    const cartographic = ellipsoid.cartesianToCartographic(cartesian);\n    const lat = Math$1.toDegrees(cartographic.latitude);\n    const lng = Math$1.toDegrees(cartographic.longitude);\n    return [lng, lat];\n  }\n\n  intersectsCoordinate(coordinate) {\n    const ellipsoid = Ellipsoid.WGS84;\n    const camera = this.viewer.camera;\n    const occluder = new EllipsoidalOccluder(ellipsoid, camera.position);\n    const point = Cartesian3.fromDegrees(coordinate[0], coordinate[1]);\n    return occluder.isPointVisible(point);\n  }\n}\n\nconst WindLayer = CesiumWind;\n\nexport default CesiumWind;\nexport { Field, WindLayer };\n//# sourceMappingURL=cesium-wind.esm.js.map\n","const degreeKm = 1110000;\r\nconst Storm = function (x, y, speed, direction) {\r\n\tvar radians = direction / 180 * Math.PI;\r\n\tvar sin = Math.sin(radians);\r\n\tvar cos = Math.cos(radians);\r\n\tthis.x = x;\r\n\tthis.y = y;\r\n\tthis.u = speed * sin / degreeKm;\r\n\tthis.v = speed * cos / degreeKm;\r\n\tthis.path = null;\r\n}\r\n\r\nexport default Storm","/*\r\n * direction degree\r\n * speed m/s\r\n **/\r\n import Storm from './Storm'\r\n import * as Cesium from 'cesium'\r\n\r\nconst TIME_RATE = 300;\r\nconst LINE_LENGTH_RATE = 10;\r\nconst StormField = function (viewer, data, options) {\r\n\tthis._primitives = viewer.scene.primitives;\r\n\tthis.data = data;\r\n\tthis.forecastTime = options.forecastTime * 60 * 60;\r\n\tthis.currentTime = 0;\r\n\tthis.storms = null;\r\n\r\n\tthis._init();\r\n}\r\n\r\nStormField.prototype = {\r\n\tconstructor: StormField,\r\n\t_init: function () {\r\n\t\t\tthis._createField();\r\n\t},\r\n\t_createField: function () {\r\n\t\tvar storms = [];\r\n\t\tthis.data.forEach(function (item) {\r\n\t\t\tvar storm = new Storm(item.x, item.y, item.speed, item.direction);\r\n\t\t\tstorm.path = [\r\n\t\t\t\tstorm.x, \r\n\t\t\t\tstorm.y, \r\n\t\t\t\tstorm.x + storm.u * TIME_RATE * LINE_LENGTH_RATE, \r\n\t\t\t\tstorm.y + storm.v * TIME_RATE * LINE_LENGTH_RATE\r\n\t\t\t];\r\n\t\t\tstorms.push(storm);\r\n\t\t});\r\n\t\tthis.storms = storms;\r\n\t},\r\n\tanimate: function () {\r\n\t\tvar that = this;\r\n\t\tthis._timer = setInterval(function () {\r\n\t\t\tthat.updatePosition();\r\n\t\t\tthat.clearStorm();\r\n\t\t\tthat.updateStorm();\r\n\t\t}, 100);\r\n\t},\r\n\tstopAnimate: function () {\r\n\t\tthis._timer && clearInterval(this._timer);\r\n\t\tthis._timer = null;\r\n\t},\r\n\tresetPosition: function () {\r\n\t\tthis.storms.forEach(function (storm) {\r\n\t\t\tstorm.path[0] = storm.x;\r\n\t\t\tstorm.path[1] = storm.y;\r\n\t\t\tstorm.path[2] = storm.x + storm.u * TIME_RATE * LINE_LENGTH_RATE;\r\n\t\t\tstorm.path[3] = storm.y + storm.v * TIME_RATE * LINE_LENGTH_RATE;\r\n\t\t});\r\n\t},\r\n\tupdatePosition: function () {\r\n\t\tif (this.currentTime >= this.forecastTime) {\r\n\t\t\tthis.resetPosition();\r\n\t\t\tthis.currentTime = 0;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.currentTime += TIME_RATE;\r\n\t\tvar that = this;\r\n\t\tthis.storms.forEach(function (storm) {\r\n\t\t\tvar dx = storm.u * that.currentTime;\r\n\t\t\tvar dy = storm.v * that.currentTime;\r\n\t\t\tstorm.path[0] += dx;\r\n\t\t\tstorm.path[1] += dy;\r\n\t\t\tstorm.path[2] += dx;\r\n\t\t\tstorm.path[3] += dy;\r\n\t\t});\r\n\t},\r\n\tupdateStorm: function () {\r\n\t\tvar instances = [];\r\n\t\tthis.storms.forEach(function (storm) {\r\n\t\t\tvar polylineGeometry = new Cesium.PolylineGeometry({\r\n\t\t\t     positions : Cesium.Cartesian3.fromDegreesArray(storm.path),\r\n\t\t\t     colors: [Cesium.Color.WHITE.withAlpha(0), Cesium.Color.WHITE],\r\n\t\t\t     width: 1.5,\r\n\t\t\t     colorsPerVertex: true\r\n\t\t\t});\r\n\r\n\t\t\tinstances.push(new Cesium.GeometryInstance({\r\n        geometry: polylineGeometry\r\n\t    }));\r\n\t\t});\r\n\t\tthis._polylines = this._primitives.add(new Cesium.Primitive({\r\n\t\t    geometryInstances: instances,\r\n\t\t    appearance: new Cesium.PolylineColorAppearance({\r\n\t\t        translucent: true\r\n\t\t    }),\r\n\t\t    asynchronous: false\r\n\t\t}));\r\n\t},\r\n\tclearStorm: function () {\r\n\t\tthis._polylines && this._primitives.remove(this._polylines);\r\n\t}\r\n}\r\n\r\nexport default StormField","<script setup lang=\"ts\">\r\nimport { onMounted, markRaw, onBeforeUnmount } from 'vue'\r\nimport { ContentWrap } from '@/components/ContentWrap'\r\nimport CesiumComponent from '@/components/Cesium/Cesium.component.vue'\r\n\r\nimport { useCesium } from '@/hooks/web/useCesium'\r\nimport * as Cesium from 'cesium'\r\n\r\nimport CesiumWind from '/public/js/cesium-wind.esm.js'\r\n\r\nimport StormField from '/public/js/storm/StormField'\r\n\r\nconst { mapRegister } = useCesium()\r\n\r\ndefineOptions({\r\n  name: 'CesiumWind'\r\n})\r\n\r\nimport CesiumGraphics from '@/components/Cesium/CesiumGraphics'\r\n\r\nlet windLayer\r\nlet stormField\r\nconst cesiumLoadCB = (viewer) => {\r\n  // ====================   将三维球定位到中国   =============================\r\n  // 相机飞行\r\n  //   viewer.camera.flyTo({\r\n  //     destination: Cesium.Cartesian3.fromDegrees(120.84, 30.15, 17850000 * 0.01),\r\n  //     orientation: {\r\n  //       heading: Cesium.Math.toRadians(350.4202942851978),\r\n  //       pitch: Cesium.Math.toRadians(-89.74026687972041),\r\n  //       roll: Cesium.Math.toRadians(0.1)\r\n  //     },\r\n  //     complete: () => {\r\n  //       // 定位完成之后的回调函数\r\n  //       // 聚合\r\n  //       // addCesiumCluster(earthquakes)\r\n  //     }\r\n  //   })\r\n  // ========================================================================\r\n\r\n  // 相机定位\r\n  viewer.camera.setView({\r\n    destination: Cesium.Cartesian3.fromDegrees(120.84, 30.15, 17850000 * 0.01),\r\n    orientation: {\r\n      heading: Cesium.Math.toRadians(350.4202942851978),\r\n      pitch: Cesium.Math.toRadians(-89.74026687972041),\r\n      roll: Cesium.Math.toRadians(0.0)\r\n    }\r\n  })\r\n\r\n  const windOptions = {\r\n    colorScale: [\r\n      'rgb(36,104, 180)',\r\n      'rgb(60,157, 194)',\r\n      'rgb(128,205,193 )',\r\n      'rgb(151,218,168 )',\r\n      'rgb(198,231,181)',\r\n      'rgb(238,247,217)',\r\n      'rgb(255,238,159)',\r\n      'rgb(252,217,125)',\r\n      'rgb(255,182,100)',\r\n      'rgb(252,150,75)',\r\n      'rgb(250,112,52)',\r\n      'rgb(245,64,32)',\r\n      'rgb(237,45,28)',\r\n      'rgb(220,24,32)',\r\n      'rgb(180,0,35)'\r\n    ],\r\n    frameRate: 16,\r\n    maxAge: 60,\r\n    globalAlpha: 0.9,\r\n    velocityScale: 1 / 30,\r\n    paths: 2000\r\n  }\r\n\r\n  fetch('/public/data/uvwind_d01.json')\r\n    .then((res) => res.json())\r\n    .then((res) => {\r\n      windLayer = new CesiumWind(res, { windOptions })\r\n      windLayer.addTo(viewer)\r\n    })\r\n\r\n  let data = [\r\n    {\r\n      x: 120.3077,\r\n      y: 30.0539,\r\n      speed: 15,\r\n      direction: 269\r\n    },\r\n    {\r\n      x: 120.3177,\r\n      y: 30.0439,\r\n      speed: 15,\r\n      direction: 269\r\n    }\r\n  ]\r\n  stormField = new StormField(viewer, data, {\r\n    forecastTime: 2\r\n  })\r\n\r\n  stormField.animate()\r\n}\r\n\r\nonBeforeUnmount(() => {\r\n  // 清除 windLayer\r\n  windLayer?.remove()\r\n\r\n  // 清除 stormField\r\n  stormField?.stopAnimate()\r\n  stormField?.clearStorm()\r\n})\r\n</script>\r\n\r\n<template>\r\n  <ContentWrap title=\"CesiumWind\">\r\n    <div class=\"w-[100%] h-[100%]\">\r\n      <cesium-component\r\n        @register=\"mapRegister\"\r\n        :config=\"{\r\n          // homeButton: true\r\n        }\"\r\n        tiandituTk=\"80cd3c8ae46ae32fa0ac19f6d739d310\"\r\n        :cesiumLoadCB=\"cesiumLoadCB\"\r\n      />\r\n    </div>\r\n  </ContentWrap>\r\n</template>\r\n"],"names":["__spreadArrays","arguments$1","s","il","r","k","a","j","jl","arg","target","varArgs","to","index","nextSource","nextKey","hasOwnProperty","symToStringTag","baseGetTag","value","isOwn","tag","unmasked","e","result","isFunction","isObject","type","isString","isNumber","isArray","arr","assign","sources","_i","floorMod","n","isValide","val","formatData","data","uComp","vComp","record","header","vectorField","Field","removeDomNode","node","Vector","u","v","verticalAngle","inDegrees","params","cols","rows","grid","p","_a","us","vs","row","i","valid","x","y","g00","g10","g01","g11","rx","ry","b","c","d","min","max","vec","xmin","xmax","lon","lat","longitudeIn","latitudeIn","indexes","ii","jj","ci","cj","fi","fj","values","maxCol","maxRow","halfXPixel","halfYPixel","o","width","height","unproject","coords","defaultOptions","indexFor","m","colorScale","BaseLayer","ctx","options","field","particles","maxAge","optVelocityScale","velocityScale","len","particle","vector","xt","yt","prev","pointPrev","pointNext","colorIdx","source","particleCount","coordinates","now","delta","CesiumWind","canvas","viewer","key","devicePixelRatio","opt","coordinate","position","scene","sceneCoor","pixel","pick","cartesian","cartographic","ellipsoid","camera","occluder","point","degreeKm","Storm","speed","direction","radians","sin","cos","TIME_RATE","LINE_LENGTH_RATE","StormField","storms","item","storm","that","dx","dy","instances","polylineGeometry","mapRegister","useCesium","windLayer","stormField","cesiumLoadCB","windOptions","res","onBeforeUnmount"],"mappings":"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"}