{"version":3,"file":"Popup-CLuUfY9M.js","sources":["../../src/components/Cesium/CesiumPrompt/index.ts","../../src/views/Prompt/Popup.vue"],"sourcesContent":["/**\r\n * 气泡窗类\r\n * @class\r\n *\r\n */\r\nimport './prompt.css'\r\nimport * as Cesium from 'cesium'\r\nclass Prompt {\r\n  /**\r\n   * @param {Cesium.Viewer} viewer 地图viewer对象\r\n   * @param {Object} opt\r\n   * @param {Cesium.Cartesian3 | Array} [opt.position] 弹窗坐标 （type=2时生效）\r\n   * @param {Boolean} opt.show 是否显示\r\n   * @param {Function} [opt.success] 创建成功的回调函数\r\n   * @param {Number} [opt.type=1] 1~位置变化提示框 / 2~固定坐标提示框\r\n   * @param {Cesium.Cartesian3 | Array} opt.position 固定坐标提示框的坐标（ cartesian3 / [101,30] ），type为1时，可不设置此参数\r\n   * @param {Boolean} [opt.anchor=true] 是否显示锚点\r\n   * @param {Boolean} [opt.closeBtn=true] 是否显示关闭按钮\r\n   * @param {String} opt.className 自定义class\r\n   * @param {String} opt.content 弹窗内容\r\n   * @param {Function} [opt.close] 关闭弹窗时的回调函数\r\n   * @param {Object} [opt.offset] 偏移参数\r\n   * @param {Number} [opt.offset.x] 横坐标偏移像素单位\r\n   * @param {Number} [opt.offset.y] 纵坐标偏移像素单位\r\n   * @param {Object} [opt.style] 弹窗面板样式\r\n   * @param {String} [opt.style.background='white'] 背景色\r\n   * @param {String} [opt.style.boxShadow] 弹窗阴影（css属性）\r\n   * @param {String} [opt.style.color] 弹窗颜色\r\n   *\r\n   */\r\n  constructor(viewer, opt) {\r\n    this.viewer = viewer\r\n    if (!this.viewer) return\r\n    this.type = 'prompt'\r\n    // 默认值\r\n    opt = opt || {}\r\n    const promptType = opt.type == undefined ? 1 : opt.type\r\n    const defaultOpt = {\r\n      id: new Date().getTime() + '' + Math.floor(Math.random() * 10000),\r\n      type: promptType,\r\n      anchor: promptType == 2 ? true : false,\r\n      closeBtn: promptType == 2 ? true : false,\r\n      offset: promptType == 2 ? { x: 42, y: 90 } : { x: 40, y: 90 },\r\n      content: '',\r\n      show: true,\r\n      style: {\r\n        background: 'rgba(0,0,0,0.5)',\r\n        color: 'white'\r\n      }\r\n    }\r\n\r\n    this.opt = Object.assign(defaultOpt, opt)\r\n\r\n    /**\r\n     * @property {Object} attr 相关属性\r\n     */\r\n    this.attr = this.opt\r\n    // ====================== 创建弹窗内容 start ======================\r\n    const mapid = this.viewer.container.id\r\n\r\n    /**\r\n     * @property {Boolearn} isShow 当前显示状态\r\n     */\r\n    this.isShow = this.opt.show == undefined ? true : this.opt.show // 是否显示\r\n    let anchorHtml = ``\r\n    let closeHtml = ``\r\n    const background = this.opt.style.background\r\n    const color = this.opt.style.color\r\n    if (this.opt.anchor) {\r\n      anchorHtml += `\r\n            <div class=\"prompt-anchor-container\">\r\n                <div class=\"prompt-anchor\" style=\"background:${background} !important;\">\r\n                </div>\r\n            </div>\r\n            `\r\n    }\r\n    if (this.opt.closeBtn) {\r\n      // 移动提示框 不显示关闭按钮\r\n      closeHtml = `<a class=\"prompt-close\" attr=\"${this.opt.id}\" id=\"prompt-close-${this.opt.id}\">x</a>`\r\n    }\r\n    const boxShadow = this.opt.style.boxShadow\r\n    const promptId = 'prompt-' + this.opt.id\r\n    const promptConenet = `\r\n                <!-- 文本内容 -->\r\n                <div class=\"prompt-content-container\" style=\"background:${background} !important;color:${color} !important;box-shadow:${boxShadow} !important\">\r\n                    <div class=\"prompt-content\" id=\"prompt-content-${this.opt.id}\">\r\n                        ${this.opt.content}\r\n                    </div>\r\n                </div>\r\n                <!-- 锚 -->\r\n                ${anchorHtml}\r\n                <!-- 关闭按钮 -->\r\n                ${closeHtml}\r\n        `\r\n    // 构建弹窗元素\r\n    this.promptDiv = window.document.createElement('div')\r\n    this.promptDiv.className = `lanwarf_cesium-prompt ${this.opt.className}`\r\n    this.promptDiv.id = promptId\r\n    this.promptDiv.innerHTML = promptConenet\r\n    const mapDom = window.document.getElementById(mapid)\r\n    mapDom.appendChild(this.promptDiv)\r\n    const clsBtn = window.document.getElementById(`prompt-close-${this.opt.id}`)\r\n    const that = this\r\n    if (clsBtn) {\r\n      clsBtn.addEventListener('click', (e) => {\r\n        that.hide()\r\n        if (that.opt.close) that.opt.close()\r\n      })\r\n    }\r\n\r\n    /**\r\n     * @property {Object} promptDom 弹窗div\r\n     */\r\n    this.promptDom = window.document.getElementById(promptId)\r\n\r\n    this.position = this.transPosition(this.opt.position)\r\n    // ====================== 创建弹窗内容 end ======================\r\n\r\n    if (promptType == 2) this.bindRender() // 固定位置弹窗 绑定实时渲染 当到地球背面时 隐藏\r\n    if (this.opt.show == false) this.hide()\r\n    this.containerW = this.viewer.container.offsetWidth\r\n    this.containerH = this.viewer.container.offsetHeight\r\n    this.containerLeft = this.viewer.container.offsetLeft\r\n    this.containerTop = this.viewer.container.offsetTop\r\n\r\n    /**\r\n     * @property {Number} contentW 弹窗宽度\r\n     */\r\n    this.contentW = Math.ceil(Number(this.promptDom.offsetWidth)) // 宽度\r\n\r\n    /**\r\n     * @property {Number} contentH 弹窗高度\r\n     */\r\n    this.contentH = this.promptDom.offsetHeight // 高度\r\n\r\n    if (this.opt.success) this.opt.success()\r\n  }\r\n\r\n  /**\r\n   * 销毁\r\n   */\r\n  destroy() {\r\n    if (this.promptDiv) {\r\n      window.document.getElementById(this.viewer.container.id).removeChild(this.promptDiv)\r\n      this.promptDiv = null\r\n    }\r\n    if (this.rendHandler) {\r\n      this.rendHandler()\r\n      this.rendHandler = null\r\n    }\r\n  }\r\n  // 实时监听\r\n  bindRender() {\r\n    const that = this\r\n    this.rendHandler = this.viewer.scene.postRender.addEventListener(function () {\r\n      if (!that.isShow && that.promptDom) {\r\n        that.promptDom.style.display = 'none'\r\n        return\r\n      }\r\n      if (!that.position) return\r\n      if (that.position instanceof Cesium.Cartesian3) {\r\n        const px = Cesium.SceneTransforms.wgs84ToWindowCoordinates(that.viewer.scene, that.position)\r\n        if (!px) return\r\n        const occluder = new Cesium.EllipsoidalOccluder(\r\n          that.viewer.scene.globe.ellipsoid,\r\n          that.viewer.scene.camera.position\r\n        )\r\n        // 当前点位是否可见 是否在地球背面\r\n        const res = occluder.isPointVisible(that.position)\r\n        if (res) {\r\n          if (that.promptDom) that.promptDom.style.display = 'block'\r\n        } else {\r\n          if (that.promptDom) that.promptDom.style.display = 'none'\r\n        }\r\n        that.setByPX({\r\n          x: px.x,\r\n          y: px.y\r\n        })\r\n      } else {\r\n        that.setByPX({\r\n          x: that.position.x,\r\n          y: that.position.y\r\n        })\r\n      }\r\n    }, this)\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Cesium.Cartesian3 | Object} px 弹窗坐标\r\n   * @param {String} html 弹窗内容\r\n   */\r\n  update(px, html) {\r\n    if (px instanceof Cesium.Cartesian3) {\r\n      this.position = px.clone()\r\n      px = Cesium.SceneTransforms.wgs84ToWindowCoordinates(this.viewer.scene, px)\r\n    }\r\n    this.contentW = Math.ceil(Number(this.promptDom.offsetWidth)) // 宽度\r\n    this.contentH = this.promptDom.offsetHeight // 高度\r\n    if (px) this.setByPX(px)\r\n    if (html) this.setContent(html)\r\n  }\r\n\r\n  // 判断是否在当前视野内\r\n  isInView() {\r\n    if (!this.position) return false\r\n    let px = null\r\n    if (this.position instanceof Cesium.Cartesian2) {\r\n      px = this.position\r\n    } else {\r\n      px = Cesium.SceneTransforms.wgs84ToWindowCoordinates(this.viewer.scene, this.position)\r\n    }\r\n    const occluder = new Cesium.EllipsoidalOccluder(\r\n      this.viewer.scene.globe.ellipsoid,\r\n      this.viewer.scene.camera.position\r\n    )\r\n    // 是否在地球背面\r\n    const res = occluder.isPointVisible(this.position)\r\n    let isin = false\r\n    if (!px) return isin\r\n    if (\r\n      px.x > this.containerLeft &&\r\n      px.x < this.containerLeft + this.containerW &&\r\n      px.y > this.containerTop &&\r\n      px.y < this.containerTop + this.containerH\r\n    ) {\r\n      isin = true\r\n    }\r\n    return res && isin\r\n  }\r\n\r\n  /**\r\n   * 是否可见\r\n   * @param {Boolean} isShow true可见，false不可见\r\n   */\r\n  setVisible(isShow) {\r\n    const isin = this.isInView(this.position)\r\n    if (isin && isShow) {\r\n      this.isShow = true\r\n      if (this.promptDom) this.promptDom.style.display = 'block'\r\n    } else {\r\n      this.isShow = false\r\n      if (this.promptDom) this.promptDom.style.display = 'none'\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 显示\r\n   */\r\n  show() {\r\n    this.setVisible(true)\r\n  }\r\n\r\n  /**\r\n   * 隐藏\r\n   */\r\n  hide() {\r\n    this.setVisible(false)\r\n  }\r\n\r\n  /**\r\n   * 设置弹窗内容\r\n   * @param {String} content 内容\r\n   */\r\n  setContent(content) {\r\n    const pc = window.document.getElementById(`prompt-content-${this.opt.id}`)\r\n    pc.innerHTML = content\r\n  }\r\n\r\n  /**\r\n   * 设置弹窗坐标\r\n   * @param {Object} opt 屏幕坐标\r\n   */\r\n  setByPX(opt) {\r\n    if (!opt) return\r\n    if (this.promptDom) {\r\n      const contentW = this.promptDom.offsetWidth // 宽度\r\n      const contentH = this.promptDom.offsetHeight // 高度\r\n      if (this.opt.type == 1) {\r\n        this.promptDom.style.left = Number(opt.x) + Number(this.opt.offset.x || 0) + 'px'\r\n        this.promptDom.style.top = Number(opt.y) + Number(this.opt.offset.y || 0) + 'px'\r\n      } else {\r\n        this.promptDom.style.left =\r\n          Number(opt.x) + Number(this.opt.offset.x || 0) - Number(this.contentW) / 2 + 'px'\r\n        this.promptDom.style.top =\r\n          Number(opt.y) + Number(this.opt.offset.y || 0) - Number(this.contentH) + 'px'\r\n      }\r\n    }\r\n  }\r\n\r\n  // 坐标转换\r\n  transPosition(p) {\r\n    let position\r\n    if (Array.isArray(p)) {\r\n      const posi = Cesium.Cartesian3.fromDegrees(p[0], p[1], p[2] || 0)\r\n      position = posi.clone()\r\n    } else if (p instanceof Cesium.Cartesian3) {\r\n      position = p.clone()\r\n    } else {\r\n      // 像素类型\r\n      position = p\r\n    }\r\n    return position\r\n  }\r\n}\r\n\r\nexport default Prompt\r\n","<script setup lang=\"ts\">\r\nimport { ContentWrap } from '@/components/ContentWrap'\r\nimport CesiumComponent from '@/components/Cesium/Cesium.component.vue'\r\n\r\nimport { useCesium } from '@/hooks/web/useCesium'\r\nimport * as Cesium from 'cesium'\r\n\r\nimport Prompt from '@/components/Cesium/CesiumPrompt/index'\r\n\r\nconst { mapRegister, mapMethods } = useCesium()\r\n\r\ndefineOptions({\r\n  name: 'Popup'\r\n})\r\n\r\nconst cesiumLoadCB = (viewer) => {\r\n  // ====================   将三维球定位到中国   =============================\r\n  // 相机飞行\r\n  viewer.camera.flyTo({\r\n    destination: Cesium.Cartesian3.fromDegrees(120.84, 30.15, 5000),\r\n    orientation: {\r\n      heading: Cesium.Math.toRadians(350.4202942851978),\r\n      pitch: Cesium.Math.toRadians(-89.74026687972041),\r\n      roll: Cesium.Math.toRadians(0.1)\r\n    },\r\n    complete: () => {\r\n      // 定位完成之后的回调函数\r\n      // 聚合\r\n      // addCesiumCluster(earthquakes)\r\n    }\r\n  })\r\n  // ========================================================================\r\n\r\n  new Prompt(viewer, {\r\n    type: 2,\r\n    content: '<div style=\"width: 100px;height: 100px;background: red;\">222</div>',\r\n    position: [120.84, 30.15, 0], // 支持多种形式传参 cartesian3 || array || object\r\n    close: function () {\r\n      return false\r\n    } // 点击关闭按钮的回调函数\r\n  })\r\n}\r\n</script>\r\n\r\n<template>\r\n  <ContentWrap title=\"Popup\">\r\n    <div class=\"h-[calc(100vh-280px)]\">\r\n      <cesium-component\r\n        @register=\"mapRegister\"\r\n        :config=\"{\r\n          // homeButton: true\r\n        }\"\r\n        tiandituTk=\"80cd3c8ae46ae32fa0ac19f6d739d310\"\r\n        :cesiumLoadCB=\"cesiumLoadCB\"\r\n      />\r\n    </div>\r\n  </ContentWrap>\r\n</template>\r\n"],"names":["Prompt","viewer","opt","promptType","defaultOpt","mapid","anchorHtml","closeHtml","background","color","boxShadow","promptId","promptConenet","clsBtn","that","e","px","html","res","isin","isShow","content","pc","p","position","mapRegister","mapMethods","useCesium","cesiumLoadCB"],"mappings":"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"}