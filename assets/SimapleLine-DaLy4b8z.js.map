{"version":3,"file":"SimapleLine-DaLy4b8z.js","sources":["../../src/views/Line/SimapleLine.vue"],"sourcesContent":["<script setup lang=\"ts\">\r\nimport { ContentWrap } from '@/components/ContentWrap'\r\nimport { ElButton } from 'element-plus'\r\nimport CesiumComponent from '@/components/Cesium/Cesium.component.vue'\r\n\r\nimport { useCesium } from '@/hooks/web/useCesium'\r\nimport * as Cesium from 'cesium'\r\n\r\nimport {\r\n  CustomMaterial,\r\n  CustomMaterialWall,\r\n  DynamicWallMaterialProperty,\r\n  PolylineTrailLinkMaterialProperty,\r\n  Spriteline1MaterialProperty,\r\n  LineFlickerMaterialProperty,\r\n  LineFlowMaterialProperty\r\n} from '@/components/Cesium/CesiumMaterialProperty'\r\n\r\nconst { mapRegister, mapMethods } = useCesium()\r\n\r\nconst { getMap } = mapMethods\r\n\r\ndefineOptions({\r\n  name: 'SimapleLine'\r\n})\r\n\r\n/**\r\n * @description: 抛物飞线效果初始化\r\n * @param {*} _viewer\r\n * @param {*} _num :每条线上的飞线数量\r\n * @return {*}\r\n */\r\nconst parabolaFlowInit = (_viewer, _num) => {\r\n  let _center = [120.9236839, 30.528061]\r\n  let _positions = [\r\n    [120.8236839, 30.528061],\r\n    [121.0236839, 30.528061],\r\n    [120.9236839, 30.428061],\r\n    [120.9236839, 30.628061],\r\n    [120.8236839, 30.428061],\r\n    [121.0236839, 30.628061],\r\n    [120.8236839, 30.628061],\r\n    [121.0236839, 30.428061]\r\n  ]\r\n  _positions.forEach((item) => {\r\n    let _siglePositions = parabola(_center, item, 5000)\r\n    // 创建飞线\r\n    for (let i = 0; i < _num; i++) {\r\n      _viewer.entities.add({\r\n        polyline: {\r\n          positions: _siglePositions,\r\n          material: new LineFlowMaterialProperty({\r\n            color: new Cesium.Color(1.0, 1.0, 0.0, 0.8),\r\n            speed: 15 * Math.random(),\r\n            percent: 0.1,\r\n            gradient: 0.01\r\n          })\r\n        }\r\n      })\r\n    }\r\n    // 创建轨迹线\r\n    _viewer.entities.add({\r\n      polyline: {\r\n        positions: _siglePositions,\r\n        material: new Cesium.Color(1.0, 1.0, 0.0, 0.2)\r\n      }\r\n    })\r\n  })\r\n\r\n  /**\r\n   * @description: 抛物线构造函数（参考开源代码）\r\n   * @param {*}\r\n   * @return {*}\r\n   */\r\n  function parabola(startPosition, endPosition, height = 0, count = 50) {\r\n    //方程 y=-(4h/L^2)*x^2+h h:顶点高度 L：横纵间距较大者\r\n    let result = []\r\n    height = Math.max(+height, 100)\r\n    count = Math.max(+count, 50)\r\n    let diffLon = Math.abs(startPosition[0] - endPosition[0])\r\n    let diffLat = Math.abs(startPosition[1] - endPosition[1])\r\n    let L = Math.max(diffLon, diffLat)\r\n    let dlt = L / count\r\n    if (diffLon > diffLat) {\r\n      //base on lon\r\n      let delLat = (endPosition[1] - startPosition[1]) / count\r\n      if (startPosition[0] - endPosition[0] > 0) {\r\n        dlt = -dlt\r\n      }\r\n      for (let i = 0; i < count; i++) {\r\n        let h = height - (Math.pow(-0.5 * L + Math.abs(dlt) * i, 2) * 4 * height) / Math.pow(L, 2)\r\n        let lon = startPosition[0] + dlt * i\r\n        let lat = startPosition[1] + delLat * i\r\n        let point = new Cesium.Cartesian3.fromDegrees(lon, lat, h)\r\n        result.push(point)\r\n      }\r\n    } else {\r\n      //base on lat\r\n      let delLon = (endPosition[0] - startPosition[0]) / count\r\n      if (startPosition[1] - endPosition[1] > 0) {\r\n        dlt = -dlt\r\n      }\r\n      for (let i = 0; i < count; i++) {\r\n        let h = height - (Math.pow(-0.5 * L + Math.abs(dlt) * i, 2) * 4 * height) / Math.pow(L, 2)\r\n        let lon = startPosition[0] + delLon * i\r\n        let lat = startPosition[1] + dlt * i\r\n        let point = new Cesium.Cartesian3.fromDegrees(lon, lat, h)\r\n        result.push(point)\r\n      }\r\n    }\r\n    return result\r\n  }\r\n}\r\n\r\n/**\r\n * @description: 产生随机点\r\n * @param {*} position：中心点坐标\r\n * @param {*} num：随机点数量\r\n * @return {*}\r\n */\r\nconst generateRandomPosition = (position, num) => {\r\n  let list = []\r\n  for (let i = 0; i < num; i++) {\r\n    // random产生的随机数范围是0-1，需要加上正负模拟\r\n    let lon = position[0] + Math.random() * 0.04 * (i % 2 == 0 ? 1 : -1)\r\n    let lat = position[1] + Math.random() * 0.04 * (i % 2 == 0 ? 1 : -1)\r\n    list.push([lon, lat])\r\n  }\r\n  return list\r\n}\r\n\r\n/**\r\n * @description: 竖直随机飞线初始化\r\n * @param {*} _viewer\r\n * @param {*} _center ：中心点\r\n * @param {*} _num ：数量\r\n * @return {*}\r\n */\r\nconst lineFlowInit = (_viewer, _center, _num) => {\r\n  let _positions = generateRandomPosition(_center, _num)\r\n  _positions.forEach((item) => {\r\n    // 经纬度\r\n    let start_lon = item[0]\r\n    let start_lat = item[1]\r\n\r\n    let startPoint = new Cesium.Cartesian3.fromDegrees(start_lon, start_lat, 0)\r\n\r\n    // 随机高度\r\n    let height = 5000 * Math.random()\r\n    let endPoint = new Cesium.Cartesian3.fromDegrees(start_lon, start_lat, height)\r\n    let linePositions = []\r\n    linePositions.push(startPoint)\r\n    linePositions.push(endPoint)\r\n    _viewer.entities.add({\r\n      polyline: {\r\n        width: 1,\r\n        positions: linePositions,\r\n        material: new LineFlowMaterialProperty({\r\n          color: Cesium.Color.fromCssColorString('#00FFFF'),\r\n          speed: 6 * Math.random(),\r\n          percent: 0.1,\r\n          gradient: 0.001\r\n        })\r\n      }\r\n    })\r\n  })\r\n}\r\n\r\nconst addPolygon = (viewer) => {\r\n  new Cesium.GeoJsonDataSource()\r\n    .load('/src/assets/data/re_polygon.json', {\r\n      stroke: Cesium.Color.RED,\r\n      fill: Cesium.Color.fromCssColorString('#caca1345'),\r\n      strokeWidth: 3,\r\n      clampToGround: true //贴地\r\n    })\r\n    .then((geoJsonDataSource) => {\r\n      viewer.dataSources.add(geoJsonDataSource)\r\n    })\r\n}\r\n\r\nconst cesiumLoadCB = (viewer) => {\r\n  // 添加实体线\r\n  let glowingLine = null\r\n  glowingLine = viewer.entities.add({\r\n    polyline: {\r\n      positions: [\r\n        Cesium.Cartesian3.fromDegrees(120.5, 30.1, 0),\r\n        Cesium.Cartesian3.fromDegrees(120.8, 30.2, 0)\r\n      ],\r\n      width: 20,\r\n      material: CustomMaterial({\r\n        image: '/src/assets/image/line4.png',\r\n        color: Cesium.Color.RED,\r\n        duration: 10000\r\n      })\r\n    }\r\n  })\r\n\r\n  viewer.flyTo(glowingLine)\r\n\r\n  viewer.entities.add({\r\n    polyline: {\r\n      positions: [\r\n        Cesium.Cartesian3.fromDegrees(120.5, 30.15, 0),\r\n        Cesium.Cartesian3.fromDegrees(120.8, 30.25, 0)\r\n      ],\r\n      width: 10,\r\n      material: new PolylineTrailLinkMaterialProperty(\r\n        3000,\r\n        new Cesium.Color(1, 36, 46),\r\n        new Cesium.Cartesian2(3.0, 1.0),\r\n        'src/assets/image/line5.png'\r\n      )\r\n    }\r\n  })\r\n\r\n  viewer.entities.add({\r\n    polyline: {\r\n      positions: [\r\n        Cesium.Cartesian3.fromDegrees(120.5, 30.16, 0),\r\n        Cesium.Cartesian3.fromDegrees(120.8, 30.26, 0)\r\n      ],\r\n      width: 1,\r\n      material: new Spriteline1MaterialProperty(1000, 'src/assets/image/line11.png')\r\n    }\r\n  })\r\n\r\n  viewer.entities.add({\r\n    polyline: {\r\n      positions: [\r\n        Cesium.Cartesian3.fromDegrees(120.5, 30.17, 0),\r\n        Cesium.Cartesian3.fromDegrees(120.8, 30.27, 0)\r\n      ],\r\n      width: 5,\r\n      material: new LineFlickerMaterialProperty({\r\n        color: Cesium.Color.YELLOW,\r\n        speed: 30\r\n      })\r\n    }\r\n  })\r\n\r\n  // 抛物飞线效果\r\n  parabolaFlowInit(viewer, 3)\r\n\r\n  // 随机竖直飞线\r\n  lineFlowInit(viewer, [120.5, 30.1], 120)\r\n\r\n  addPolygon(viewer)\r\n\r\n  viewer.scene.debugShowFramesPerSecond = true\r\n\r\n  //   viewer.entities.add({\r\n  //     wall: {\r\n  //       positions: Cesium.Cartesian3.fromDegreesArray([\r\n  //         120.0, 30.0, 121.0, 30.0, 120.0, 31.0, 121.0, 31.0\r\n  //       ]),\r\n  //       minimumHeights: [12000, 12000, 12000, 12000],\r\n  //       maximumHeights: [50, 50, 50, 50],\r\n  //       material: new DynamicWallMaterialProperty({\r\n  //         viewer: viewer,\r\n  //         image: '/src/assets/image/colors.png',\r\n  //         color: Cesium.Color.RED,\r\n  //         duration: 18000\r\n  //       })\r\n  //     }\r\n  //   })\r\n}\r\n</script>\r\n\r\n<template>\r\n  <ContentWrap title=\"简单线\">\r\n    <div class=\"w-[100%] h-[100%]\">\r\n      <cesium-component\r\n        @register=\"mapRegister\"\r\n        :config=\"{\r\n          // homeButton: true\r\n        }\"\r\n        tiandituTk=\"80cd3c8ae46ae32fa0ac19f6d739d310\"\r\n        :cesiumLoadCB=\"cesiumLoadCB\"\r\n      />\r\n    </div>\r\n  </ContentWrap>\r\n</template>\r\n"],"names":["mapRegister","mapMethods","useCesium","parabolaFlowInit","_viewer","_num","_center","item","_siglePositions","parabola","i","LineFlowMaterialProperty","startPosition","endPosition","height","count","result","diffLon","diffLat","L","dlt","delLat","h","lon","lat","point","delLon","generateRandomPosition","position","num","list","lineFlowInit","start_lon","start_lat","startPoint","endPoint","linePositions","addPolygon","viewer","geoJsonDataSource","cesiumLoadCB","glowingLine","CustomMaterial","PolylineTrailLinkMaterialProperty","Spriteline1MaterialProperty","LineFlickerMaterialProperty"],"mappings":"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"}